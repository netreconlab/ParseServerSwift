{
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " that is thread safe and whose execution is fully controlled",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by the user.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11NIOEmbedded24NIOAsyncTestingEventLoopC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NIOAsyncTestingEventLoop"
      }
    ],
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "NIOAsyncTestingEventLoop"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "NIOAsyncTestingEventLoop"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "NIOAsyncTestingEventLoop"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Unlike more complex ",
              "type" : "text"
            },
            {
              "code" : "EventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : "s, such as ",
              "type" : "text"
            },
            {
              "code" : "SelectableEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : ", the ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "has no proper eventing mechanism. Instead, reads and writes are fully controlled by the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "entity that instantiates the ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : ". This property makes ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of limited use for many application purposes, but highly valuable for testing and other",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "kinds of mocking. Unlike ",
              "type" : "text"
            },
            {
              "code" : "EmbeddedEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : " is fully thread-safe and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "safe to use from within a Swift concurrency context.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Unlike ",
              "type" : "text"
            },
            {
              "code" : "EmbeddedEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : " does require that user tests appropriately",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "enforce thread safety. Used carefully it is possible to safely operate the event loop without",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "explicit synchronization, but it is recommended to use ",
              "type" : "text"
            },
            {
              "code" : "executeInContext",
              "type" : "codeVoice"
            },
            {
              "text" : " in any case where it’s",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "necessary to ensure that the event loop is not making progress.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Time is controllable on an ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : ". It begins at ",
              "type" : "text"
            },
            {
              "code" : "NIODeadline.uptimeNanoseconds(0)",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and may be advanced by a fixed amount by using ",
              "type" : "text"
            },
            {
              "code" : "advanceTime(by:)",
              "type" : "codeVoice"
            },
            {
              "text" : ", or advanced to a point in",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "time with ",
              "type" : "text"
            },
            {
              "code" : "advanceTime(to:)",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If users wish to perform multiple tasks at once on an ",
              "type" : "text"
            },
            {
              "code" : "NIOAsyncTestingEventLoop",
              "type" : "codeVoice"
            },
            {
              "text" : ", it is recommended that they",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "use ",
              "type" : "text"
            },
            {
              "code" : "executeInContext",
              "type" : "codeVoice"
            },
            {
              "text" : " to perform the operations. For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "await loop.executeInContext {",
            "    \/\/ All three of these will be queued up simultaneously, and no other code can",
            "    \/\/ get between them.",
            "    loop.execute { firstTask() }",
            "    loop.execute { secondTask() }",
            "    loop.execute { thirdTask() }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "There is a tricky requirement around waiting for ",
              "type" : "text"
            },
            {
              "code" : "EventLoopFuture",
              "type" : "codeVoice"
            },
            {
              "text" : "s when working with this",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "event loop. Simply calling ",
              "type" : "text"
            },
            {
              "code" : ".wait()",
              "type" : "codeVoice"
            },
            {
              "text" : " from the test thread will never complete. This is because",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "wait",
              "type" : "codeVoice"
            },
            {
              "text" : " calls ",
              "type" : "text"
            },
            {
              "code" : "loop.execute",
              "type" : "codeVoice"
            },
            {
              "text" : " under the hood, and that callback cannot execute without calling",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "loop.run()",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopGroup",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSerialEventLoopExecutor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/ScF",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/Scf"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/inEventLoop"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/advanceTime(by:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/advanceTime(to:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/execute(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/executeInContext(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/preconditionInEventLoop(file:line:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/preconditionNotInEventLoop(file:line:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/run()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/scheduleTask(deadline:_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/scheduleTask(in:_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/shutdownGracefully()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/shutdownGracefully(queue:_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/EventLoop-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/EventLoopGroup-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/Executor-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/NIOSerialEventLoopExecutor-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/SerialExecutor-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nioembedded\/nioasynctestingeventloop"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/ScF": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/ScF",
  "title" : "_Concurrency.Executor",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/Scf": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/Scf",
  "title" : "_Concurrency.SerialExecutor",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoop": {
  "abstract" : [
    {
      "text" : "An EventLoop processes IO \/ tasks in an endless loop for ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s until it’s closed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoop"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoop"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloop"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopGroup": {
  "abstract" : [
    {
      "text" : "Provides an endless stream of ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : "s to use.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopGroup"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopGroup"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopGroup",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopgroup"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSerialEventLoopExecutor": {
  "abstract" : [
    {
      "text" : "A helper protocol that can be mixed in to a NIO ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to provide an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "automatic conformance to ",
      "type" : "text"
    },
    {
      "code" : "SerialExecutor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSerialEventLoopExecutor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSerialEventLoopExecutor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSerialEventLoopExecutor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSerialEventLoopExecutor",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioserialeventloopexecutor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " that is thread safe and whose execution is fully controlled",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by the user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncTestingEventLoop"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncTestingEventLoop"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncTestingEventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/EventLoop-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/EventLoop-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "EventLoop Implementations",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/eventloop-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/EventLoopGroup-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/EventLoopGroup-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "EventLoopGroup Implementations",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/eventloopgroup-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/Executor-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/Executor-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Executor Implementations",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/executor-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/NIOSerialEventLoopExecutor-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/NIOSerialEventLoopExecutor-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "NIOSerialEventLoopExecutor Implementations",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/nioserialeventloopexecutor-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/SerialExecutor-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/SerialExecutor-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "SerialExecutor Implementations",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/serialexecutor-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/advanceTime(by:)": {
  "abstract" : [
    {
      "text" : "Runs the event loop and moves “time” forward by the given amount, running any scheduled",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "tasks that need to be run.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "advanceTime"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10TimeAmountV",
      "text" : "TimeAmount"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/advanceTime(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "advanceTime(by:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/advancetime(by:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/advanceTime(to:)": {
  "abstract" : [
    {
      "text" : "Runs the event loop and moves “time” forward to the given point in time, running any scheduled",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "tasks that need to be run.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "advanceTime"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore11NIODeadlineV",
      "text" : "NIODeadline"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/advanceTime(to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "advanceTime(to:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/advancetime(to:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/execute(_:)": {
  "abstract" : [
    {
      "text" : "On an ",
      "type" : "text"
    },
    {
      "code" : "NIOAsyncTestingEventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "execute",
      "type" : "codeVoice"
    },
    {
      "text" : " will simply use ",
      "type" : "text"
    },
    {
      "code" : "scheduleTask",
      "type" : "codeVoice"
    },
    {
      "text" : " with a deadline of ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "now",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : ". Unlike with the other operations, this will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "immediately execute, to eliminate a common class of bugs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "execute"
    },
    {
      "kind" : "text",
      "text" : "(() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/execute(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "execute(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/execute(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/executeInContext(_:)": {
  "abstract" : [
    {
      "text" : "Executes the given function in the context of this event loop. This is useful when it’s necessary to be confident that an operation",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is “blocking” the event loop. As long as you are executing, nothing else can execute in this loop.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "executeInContext"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "ReturnType"
    },
    {
      "kind" : "text",
      "text" : ">(() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ReturnType"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ReturnType"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/executeInContext(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "executeInContext(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/executeincontext(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/inEventLoop": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "inEventLoop"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/inEventLoop",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "inEventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/ineventloop"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/init()": {
  "abstract" : [
    {
      "text" : "Initialize a new ",
      "type" : "text"
    },
    {
      "code" : "NIOAsyncTestingEventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/init()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/preconditionInEventLoop(file:line:)": {
  "abstract" : [
    {
      "text" : "Asserts that the current thread is the one tied to this ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Otherwise, the process will be abnormally terminated as per the semantics of ",
      "type" : "text"
    },
    {
      "code" : "preconditionFailure(_:file:line:)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "preconditionInEventLoop"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/preconditionInEventLoop(file:line:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "preconditionInEventLoop(file:line:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/preconditionineventloop(file:line:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/preconditionNotInEventLoop(file:line:)": {
  "abstract" : [
    {
      "text" : "Asserts that the current thread is ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "not",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " the one tied to this ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Otherwise, the process will be abnormally terminated as per the semantics of ",
      "type" : "text"
    },
    {
      "code" : "preconditionFailure(_:file:line:)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "preconditionNotInEventLoop"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/preconditionNotInEventLoop(file:line:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "preconditionNotInEventLoop(file:line:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/preconditionnotineventloop(file:line:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/run()": {
  "abstract" : [
    {
      "text" : "Run all tasks that have previously been submitted to this ",
      "type" : "text"
    },
    {
      "code" : "NIOAsyncTestingEventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ", either by calling ",
      "type" : "text"
    },
    {
      "code" : "execute",
      "type" : "codeVoice"
    },
    {
      "text" : " or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "events that have been enqueued using ",
      "type" : "text"
    },
    {
      "code" : "scheduleTask",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "scheduleRepeatedTask",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "scheduleRepeatedAsyncTask",
      "type" : "codeVoice"
    },
    {
      "text" : " and whose",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deadlines have expired.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "run"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/run()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "run()",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/run()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/scheduleTask(deadline:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scheduleTask"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "deadline"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore11NIODeadlineV",
      "text" : "NIODeadline"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore9ScheduledV",
      "text" : "Scheduled"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/scheduleTask(deadline:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scheduleTask(deadline:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/scheduletask(deadline:_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/scheduleTask(in:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scheduleTask"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "in"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10TimeAmountV",
      "text" : "TimeAmount"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore9ScheduledV",
      "text" : "Scheduled"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/scheduleTask(in:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scheduleTask(in:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/scheduletask(in:_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/shutdownGracefully()": {
  "abstract" : [
    {
      "text" : "The concurrency-aware equivalent of ",
      "type" : "text"
    },
    {
      "code" : "shutdownGracefully(queue:_:)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shutdownGracefully"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/shutdownGracefully()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shutdownGracefully()",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/shutdowngracefully()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop/shutdownGracefully(queue:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shutdownGracefully"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "queue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
      "text" : "DispatchQueue"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop\/shutdownGracefully(queue:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shutdownGracefully(queue:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop\/shutdowngracefully(queue:_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}