{
  "abstract" : [
    {
      "text" : "Creates a sequence of each pair of elements of two underlying sequences.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Algorithms"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Algorithms\/product(_:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "product"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Base1"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "genericParameter",
        "text" : "Base2"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base1L_xmfp",
        "text" : "Base1"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base2L_q_mfp",
        "text" : "Base2"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Algorithms16Product2SequenceV",
        "text" : "Product2Sequence"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base1L_xmfp",
        "text" : "Base1"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base2L_q_mfp",
        "text" : "Base2"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "Algorithms"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Function",
    "symbolKind" : "func",
    "title" : "product(_:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "product"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Base1"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Base2"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "s1"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base1L_xmfp",
              "text" : "Base1"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "s2"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base2L_q_mfp",
              "text" : "Base2"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Algorithms\/Product2Sequence",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10Algorithms16Product2SequenceV",
              "text" : "Product2Sequence"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base1L_xmfp",
              "text" : "Base1"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base2L_q_mfp",
              "text" : "Base2"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base1"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:ST",
              "text" : "Sequence"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base2"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sl",
              "text" : "Collection"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The first sequence to iterate over.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "s1"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The second sequence to iterate over.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "s2"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this function to iterate over every pair of elements in two different",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "collections. The returned sequence yields 2-element tuples, where the first",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "element of the tuple is from the first collection and the second element is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "from the second collection.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let numbers = 1...3",
            "let colors = [\"cerise\", \"puce\", \"heliotrope\"]",
            "for (number, color) in product(numbers, colors) {",
            "    print(\"\\(number): \\(color)\")",
            "}",
            "\/\/ 1: cerise",
            "\/\/ 1: puce",
            "\/\/ 1: heliotrope",
            "\/\/ 2: cerise",
            "\/\/ 2: puce",
            "\/\/ 2: heliotrope",
            "\/\/ 3: cerise",
            "\/\/ 3: puce",
            "\/\/ 3: heliotrope"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The order of tuples in the returned sequence is consistent. The first",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "element of the first collection is paired with each element of the second",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "collection, then the second element of the first collection is paired with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "each element of the second collection, and so on.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "O(1)",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Complexity",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/algorithms\/product(_:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Algorithms": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Algorithms",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Algorithms",
  "type" : "topic",
  "url" : "\/documentation\/algorithms"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Algorithms/Product2Sequence": {
  "abstract" : [
    {
      "text" : "A sequence that represents the product of two sequences’ elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Product2Sequence"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Algorithms\/Product2Sequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Product2Sequence"
    }
  ],
  "role" : "symbol",
  "title" : "Product2Sequence",
  "type" : "topic",
  "url" : "\/documentation\/algorithms\/product2sequence"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Algorithms/product(_:_:)": {
  "abstract" : [
    {
      "text" : "Creates a sequence of each pair of elements of two underlying sequences.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "product"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Base1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Base2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base1L_xmfp",
      "text" : "Base1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base2L_q_mfp",
      "text" : "Base2"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Algorithms16Product2SequenceV",
      "text" : "Product2Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base1L_xmfp",
      "text" : "Base1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Algorithms7productyAA16Product2SequenceVyxq_Gx_q_tSTRzSlR_r0_lF5Base2L_q_mfp",
      "text" : "Base2"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Algorithms\/product(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "product(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/algorithms\/product(_:_:)"
}
}
}