{
  "abstract" : [
    {
      "text" : "An unsafe reference type holding a lazily initializable atomic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "strong reference, requiring manual memory management of the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "underlying storage representation.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:7Atomics25UnsafeAtomicLazyReferenceV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "UnsafeAtomicLazyReference"
      }
    ],
    "modules" : [
      {
        "name" : "Atomics"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "UnsafeAtomicLazyReference"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "UnsafeAtomicLazyReference"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@frozen"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "UnsafeAtomicLazyReference"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Instance"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Instance"
            },
            {
              "kind" : "text",
              "text" : " : AnyObject"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "These values can be set (initialized) exactly once, but read many",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "times.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()"
      ],
      "title" : "Type Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/atomics\/unsafeatomiclazyreference"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Atomics",
  "type" : "topic",
  "url" : "\/documentation\/atomics"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference": {
  "abstract" : [
    {
      "text" : "An unsafe reference type holding a lazily initializable atomic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "strong reference, requiring manual memory management of the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "underlying storage representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnsafeAtomicLazyReference"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnsafeAtomicLazyReference"
    }
  ],
  "role" : "symbol",
  "title" : "UnsafeAtomicLazyReference",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/Storage": {
  "abstract" : [
    {
      "text" : "The storage representation for an atomic lazy reference value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Storage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Storage"
    }
  ],
  "role" : "symbol",
  "title" : "UnsafeAtomicLazyReference.Storage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/storage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/Value": {
  "abstract" : [
    {
      "text" : "The value logically stored in an atomic lazy reference value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Value"
    }
  ],
  "role" : "symbol",
  "title" : "UnsafeAtomicLazyReference.Value",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/value"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/create()": {
  "abstract" : [
    {
      "text" : "Create a new ",
      "type" : "text"
    },
    {
      "code" : "UnsafeAtomicLazyReference",
      "type" : "codeVoice"
    },
    {
      "text" : " value by dynamically allocating",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "storage for it.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "create"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics25UnsafeAtomicLazyReferenceV",
      "text" : "UnsafeAtomicLazyReference"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Instance"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "create()",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/create()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/destroy()": {
  "abstract" : [
    {
      "text" : "Disposes of the current value of the storage location corresponding to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "this unsafe atomic lazy reference, then deinitializes and deallocates the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "storage.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "destroy"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "destroy()",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/destroy()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/init(at:)": {
  "abstract" : [
    {
      "text" : "Initialize an unsafe atomic lazy reference that uses the supplied memory",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "location for storage. The storage location must already be initialized to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "represent a valid atomic value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV",
      "text" : "Storage"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(at:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/init(at:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/load()": {
  "abstract" : [
    {
      "text" : "Atomically loads and returns the current value of this reference.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "load"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp",
      "text" : "Instance"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "load()",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/load()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference/storeIfNilThenLoad(_:)": {
  "abstract" : [
    {
      "text" : "Atomically initializes this reference if its current value is nil, then",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "returns the initialized value. If this reference is already initialized,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "then ",
      "type" : "text"
    },
    {
      "code" : "storeIfNilThenLoad(_:)",
      "type" : "codeVoice"
    },
    {
      "text" : " discards its supplied argument and returns",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the current value without updating it.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "storeIfNilThenLoad"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp",
      "text" : "Instance"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp",
      "text" : "Instance"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "storeIfNilThenLoad(_:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference\/storeifnilthenload(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}