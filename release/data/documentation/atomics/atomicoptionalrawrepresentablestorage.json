{
  "abstract" : [
    {
      "text" : "A default atomic storage representation for a ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " type",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whose ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to ",
      "type" : "text"
    },
    {
      "code" : "AtomicOptionalWrappable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AtomicOptionalRawRepresentableStorage"
      }
    ],
    "modules" : [
      {
        "name" : "Atomics"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AtomicOptionalRawRepresentableStorage"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "AtomicOptionalRawRepresentableStorage"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@frozen"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AtomicOptionalRawRepresentableStorage"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SY",
              "text" : "RawRepresentable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "RawValue"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalWrappable",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Atomics23AtomicOptionalWrappableP",
              "text" : "AtomicOptionalWrappable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "RawValue"
            },
            {
              "kind" : "text",
              "text" : " == "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "RawValue"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "AtomicRepresentation"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Value"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicStorage"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/init(_:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/dispose()"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/Value"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:ordering:)-3aodx",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicExchange(_:at:ordering:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicLoad(at:ordering:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicStore(_:at:ordering:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"
      ],
      "title" : "Type Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/AtomicStorage-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Atomics",
  "type" : "topic",
  "url" : "\/documentation\/atomics"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage": {
  "abstract" : [
    {
      "text" : "A default atomic storage representation for a ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " type",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whose ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to ",
      "type" : "text"
    },
    {
      "code" : "AtomicOptionalWrappable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalRawRepresentableStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalRawRepresentableStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalRawRepresentableStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/AtomicStorage-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/AtomicStorage-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AtomicStorage Implementations",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicstorage-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/Value": {
  "abstract" : [
    {
      "text" : "The type whose values this storage representation is representing.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/Value",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Value"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalRawRepresentableStorage.Value",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/value"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicCompareExchange(expected:desired:at:ordering:)-3aodx": {
  "abstract" : [
    {
      "text" : "Perform an atomic compare and exchange operation on the value referenced",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : ", applying the specified memory ordering.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicCompareExchange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "desired"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "ordering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
      "text" : "AtomicUpdateOrdering"
    },
    {
      "kind" : "text",
      "text" : ") -> (exchanged"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", original"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:ordering:)-3aodx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicCompareExchange(expected:desired:at:ordering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-3aodx"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)": {
  "abstract" : [
    {
      "text" : "Perform an atomic compare and exchange operation on the value referenced",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : ", applying the specified success\/failure memory orderings.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicCompareExchange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "desired"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "successOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
      "text" : "AtomicUpdateOrdering"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "failureOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics18AtomicLoadOrderingV",
      "text" : "AtomicLoadOrdering"
    },
    {
      "kind" : "text",
      "text" : ") -> (exchanged"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", original"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicExchange(_:at:ordering:)": {
  "abstract" : [
    {
      "text" : "Atomically sets the value referenced by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : " to ",
      "type" : "text"
    },
    {
      "code" : "desired",
      "type" : "codeVoice"
    },
    {
      "text" : " and returns",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the original value, applying the specified memory ordering.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicExchange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "ordering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
      "text" : "AtomicUpdateOrdering"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicExchange(_:at:ordering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicExchange(_:at:ordering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicexchange(_:at:ordering:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicLoad(at:ordering:)": {
  "abstract" : [
    {
      "text" : "Atomically loads and returns the value referenced by the given pointer,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "applying the specified memory ordering.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicLoad"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "ordering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics18AtomicLoadOrderingV",
      "text" : "AtomicLoadOrdering"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicLoad(at:ordering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicLoad(at:ordering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicload(at:ordering:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicStore(_:at:ordering:)": {
  "abstract" : [
    {
      "text" : "Atomically sets the value referenced by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : " to ",
      "type" : "text"
    },
    {
      "code" : "desired",
      "type" : "codeVoice"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "applying the specified memory ordering.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicStore"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "ordering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics19AtomicStoreOrderingV",
      "text" : "AtomicStoreOrdering"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicStore(_:at:ordering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicStore(_:at:ordering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicstore(_:at:ordering:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)": {
  "abstract" : [
    {
      "text" : "Perform an atomic weak compare and exchange operation on the value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "referenced by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : ", applying the specified success\/failure memory",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "orderings. This compare-exchange variant is allowed to spuriously fail; it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is designed to be called in a loop until it indicates a successful",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "exchange has happened.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicWeakCompareExchange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "desired"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "successOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
      "text" : "AtomicUpdateOrdering"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "failureOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics18AtomicLoadOrderingV",
      "text" : "AtomicLoadOrdering"
    },
    {
      "kind" : "text",
      "text" : ") -> (exchanged"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", original"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/dispose()": {
  "abstract" : [
    {
      "text" : "Prepare this atomic storage value for deinitialization, extracting the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "logical value it represents. This invalidates this atomic storage; you",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "must not perform any operations on it after this call (except for",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deinitialization).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dispose"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/dispose()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dispose()",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/dispose()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/init(_:)": {
  "abstract" : [
    {
      "text" : "Encode the supplied value into its atomic storage representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/init(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/init(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalWrappable": {
  "abstract" : [
    {
      "text" : "An atomic value that also supports atomic operations when wrapped",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in an ",
      "type" : "text"
    },
    {
      "code" : "Optional",
      "type" : "codeVoice"
    },
    {
      "text" : ". Atomic optional wrappable types come with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "standalone atomic representation for their optional-wrapped",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "variants.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalWrappable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalWrappable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalWrappable"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalWrappable",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalwrappable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicStorage": {
  "abstract" : [
    {
      "text" : "The storage representation for an atomic value, providing pointer-based",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "atomic operations. This is a low-level implementation detail of atomic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "types; instead of directly handling conforming types, it is usually better",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to use the ",
      "type" : "text"
    },
    {
      "code" : "UnsafeAtomic",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "ManagedAtomic",
      "type" : "codeVoice"
    },
    {
      "text" : " generics – these provide more",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "convenient and safer interfaces while also ensuring that the storage is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "correctly constructed and destroyed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicstorage"
}
}
}