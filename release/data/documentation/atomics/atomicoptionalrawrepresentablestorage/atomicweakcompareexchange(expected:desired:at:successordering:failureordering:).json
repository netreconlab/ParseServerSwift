{
  "abstract" : [
    {
      "text" : "Perform an atomic weak compare and exchange operation on the value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "referenced by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : ", applying the specified success\/failure memory",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "orderings. This compare-exchange variant is allowed to spuriously fail; it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is designed to be called in a loop until it indicates a successful",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "exchange has happened.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureO0Sb9exchanged_xSg8originaltAK_AKnSpyACyxGGAA0b6UpdateO0VAA0b4LoadO0VtFZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atomicWeakCompareExchange"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "expected"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sq",
        "text" : "Optional"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
        "text" : "Wrapped"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "desired"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sq",
        "text" : "Optional"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
        "text" : "Wrapped"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "at"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sp",
        "text" : "UnsafeMutablePointer"
      },
      {
        "kind" : "text",
        "text" : "<`Self`"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "successOrdering"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
        "text" : "AtomicUpdateOrdering"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "failureOrdering"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Atomics18AtomicLoadOrderingV",
        "text" : "AtomicLoadOrdering"
      },
      {
        "kind" : "text",
        "text" : ") -> (exchanged"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ", original"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sq",
        "text" : "Optional"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
        "text" : "Wrapped"
      },
      {
        "kind" : "text",
        "text" : ">)"
      }
    ],
    "modules" : [
      {
        "name" : "Atomics"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Method",
    "symbolKind" : "method",
    "title" : "atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "atomicWeakCompareExchange"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "expected"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sq",
              "text" : "Optional"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "desired"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sq",
              "text" : "Optional"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "at"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "pointer"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sp",
              "text" : "UnsafeMutablePointer"
            },
            {
              "kind" : "text",
              "text" : "<`Self`"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "successOrdering"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicUpdateOrdering",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
              "text" : "AtomicUpdateOrdering"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "failureOrdering"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicLoadOrdering",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Atomics18AtomicLoadOrderingV",
              "text" : "AtomicLoadOrdering"
            },
            {
              "kind" : "text",
              "text" : ") -> (exchanged"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : ", original"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sq",
              "text" : "Optional"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
              "text" : "Wrapped"
            },
            {
              "kind" : "text",
              "text" : ">)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The expected current value.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "expected"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The desired new value.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "desired"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A memory location previously initialized with a value",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "returned by ",
                  "type" : "text"
                },
                {
                  "code" : "prepareAtomicRepresentation(for:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "pointer"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The memory ordering to apply if this",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "operation performs the exchange.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "successOrdering"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The memory ordering to apply on this",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "operation does not perform the exchange.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "failureOrdering"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A tuple ",
              "type" : "text"
            },
            {
              "code" : "(exchanged, original)",
              "type" : "codeVoice"
            },
            {
              "text" : ", where ",
              "type" : "text"
            },
            {
              "code" : "exchanged",
              "type" : "codeVoice"
            },
            {
              "text" : " is true if",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the exchange was successful, and ",
              "type" : "text"
            },
            {
              "code" : "original",
              "type" : "codeVoice"
            },
            {
              "text" : " is the original value.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This operation performs the following algorithm as a single atomic",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "transaction:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "atomic(self) { currentValue in",
            "  let original = currentValue",
            "  guard original == expected else { return (false, original) }",
            "  currentValue = desired",
            "  return (true, original)",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "(In this weak form, transient conditions may cause the ",
              "type" : "text"
            },
            {
              "code" : "original == expected",
              "type" : "codeVoice"
            },
            {
              "text" : " check to sometimes return false when the two values are in fact",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the same.)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "successOrdering",
              "type" : "codeVoice"
            },
            {
              "text" : " argument specifies the memory ordering to use when the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "operation manages to update the current value, while ",
              "type" : "text"
            },
            {
              "code" : "failureOrdering",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "will be used when the operation leaves the value intact.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Atomics",
  "type" : "topic",
  "url" : "\/documentation\/atomics"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicLoadOrdering": {
  "abstract" : [
    {
      "text" : "Specifies the memory ordering semantics of an atomic load operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicLoadOrdering"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicLoadOrdering",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicLoadOrdering"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicLoadOrdering",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicloadordering"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage": {
  "abstract" : [
    {
      "text" : "A default atomic storage representation for a ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " type",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whose ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to ",
      "type" : "text"
    },
    {
      "code" : "AtomicOptionalWrappable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalRawRepresentableStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalRawRepresentableStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalRawRepresentableStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)": {
  "abstract" : [
    {
      "text" : "Perform an atomic weak compare and exchange operation on the value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "referenced by ",
      "type" : "text"
    },
    {
      "code" : "pointer",
      "type" : "codeVoice"
    },
    {
      "text" : ", applying the specified success\/failure memory",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "orderings. This compare-exchange variant is allowed to spuriously fail; it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is designed to be called in a loop until it indicates a successful",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "exchange has happened.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicWeakCompareExchange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "desired"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sp",
      "text" : "UnsafeMutablePointer"
    },
    {
      "kind" : "text",
      "text" : "<`Self`"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "successOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
      "text" : "AtomicUpdateOrdering"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "failureOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics18AtomicLoadOrderingV",
      "text" : "AtomicLoadOrdering"
    },
    {
      "kind" : "text",
      "text" : ") -> (exchanged"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", original"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sq",
      "text" : "Optional"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp",
      "text" : "Wrapped"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicUpdateOrdering": {
  "abstract" : [
    {
      "text" : "Specifies the memory ordering semantics of an atomic read-modify-write",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicUpdateOrdering"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicUpdateOrdering",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicUpdateOrdering"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicUpdateOrdering",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicupdateordering"
}
}
}