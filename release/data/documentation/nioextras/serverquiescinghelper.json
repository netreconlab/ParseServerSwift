{
  "abstract" : [
    {
      "text" : "Helper that can be used to orchestrate the quiescing of a server ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " and all the child ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s that are",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "open at a given point in time.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9NIOExtras21ServerQuiescingHelperC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ServerQuiescingHelper"
      }
    ],
    "modules" : [
      {
        "name" : "NIOExtras"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ServerQuiescingHelper"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "ServerQuiescingHelper"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ServerQuiescingHelper"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " makes it easy to collect all child ",
              "type" : "text"
            },
            {
              "code" : "Channel",
              "type" : "codeVoice"
            },
            {
              "text" : "s that a given server ",
              "type" : "text"
            },
            {
              "code" : "Channel",
              "type" : "codeVoice"
            },
            {
              "text" : " accepts. When",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the quiescing period starts (that is when ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is invoked), it will perform the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "following actions:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "close the server ",
                      "type" : "text"
                    },
                    {
                      "code" : "Channel",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " so no further connections get accepted",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "send a ",
                      "type" : "text"
                    },
                    {
                      "code" : "ChannelShouldQuiesceEvent",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " user event to all currently still open child ",
                      "type" : "text"
                    },
                    {
                      "code" : "Channel",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : "s",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "after all previously open child ",
                      "type" : "text"
                    },
                    {
                      "code" : "Channel",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : "s have closed, notify the ",
                      "type" : "text"
                    },
                    {
                      "code" : "EventLoopPromise",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " that was passed to ",
                      "type" : "text"
                    },
                    {
                      "code" : "shutdown",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Example use:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let group = MultiThreadedEventLoopGroup(numThreads: [...])",
            "let quiesce = ServerQuiescingHelper(group: group)",
            "let serverChannel = try ServerBootstrap(group: group)",
            "    .serverChannelInitializer { channel in",
            "        \/\/ add the collection handler so all accepted child channels get collected",
            "        channel.pipeline.add(handler: quiesce.makeServerChannelHandler(channel: channel))",
            "    }",
            "    \/\/ further bootstrap configuration",
            "    .bind([...])",
            "    .wait()",
            "\/\/ [...]",
            "let fullyShutdownPromise: EventLoopPromise<Void> = group.next().newPromise()",
            "\/\/ initiate the shutdown",
            "quiesce.initiateShutdown(promise: fullyShutdownPromise)",
            "\/\/ wait for the shutdown to complete",
            "try fullyShutdownPromise.futureResult.wait()"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/UnusedQuiescingHelperError"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nioextras\/serverquiescinghelper"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIOExtras",
  "type" : "topic",
  "url" : "\/documentation\/nioextras"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/ServerQuiescingHelper": {
  "abstract" : [
    {
      "text" : "Helper that can be used to orchestrate the quiescing of a server ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " and all the child ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s that are",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "open at a given point in time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ServerQuiescingHelper"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ServerQuiescingHelper"
    }
  ],
  "role" : "symbol",
  "title" : "ServerQuiescingHelper",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/serverquiescinghelper"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/ServerQuiescingHelper/UnusedQuiescingHelperError": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ServerQuiescingHelper",
      "type" : "codeVoice"
    },
    {
      "text" : " was never used to create a channel handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnusedQuiescingHelperError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/UnusedQuiescingHelperError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnusedQuiescingHelperError"
    }
  ],
  "role" : "symbol",
  "title" : "ServerQuiescingHelper.UnusedQuiescingHelperError",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/serverquiescinghelper\/unusedquiescinghelpererror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/ServerQuiescingHelper/init(group:)": {
  "abstract" : [
    {
      "text" : "Initialize with a given ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "group"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14EventLoopGroupP",
      "text" : "EventLoopGroup"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(group:)",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/serverquiescinghelper\/init(group:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/ServerQuiescingHelper/initiateShutdown(promise:)": {
  "abstract" : [
    {
      "text" : "Initiate the shutdown.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "initiateShutdown"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "promise"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore16EventLoopPromiseV",
      "text" : "EventLoopPromise"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "initiateShutdown(promise:)",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/serverquiescinghelper\/initiateshutdown(promise:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/ServerQuiescingHelper/makeServerChannelHandler(channel:)": {
  "abstract" : [
    {
      "text" : "Create the ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " for the server ",
      "type" : "text"
    },
    {
      "code" : "channel",
      "type" : "codeVoice"
    },
    {
      "text" : " to collect all accepted child ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "makeServerChannelHandler"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "channel"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14ChannelHandlerP",
      "text" : "ChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "makeServerChannelHandler(channel:)",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/serverquiescinghelper\/makeserverchannelhandler(channel:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}