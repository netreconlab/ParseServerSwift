{
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "NIO",
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "NIO"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AcceptBackoffHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/BackPressureHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandlerContext",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelPipeline",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ClientBootstrap",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DatagramBootstrap",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IdleStateHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MessageToByteHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MultiThreadedEventLoopGroup",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOCloseOnErrorHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFileHandle",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBoundBox",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIONetworkInterface",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPipeBootstrap",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIORawSocketBootstrap",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSingleStepByteToMessageProcessor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOThreadPool",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RepeatedTask",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ThreadSpecificVariable",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/EmbeddedChannel",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/EmbeddedEventLoop",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingChannel",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageDecoder",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Channel",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelCore",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInboundHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInboundInvoker",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInvoker",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundInvoker",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopGroup",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/FileDescriptor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MessageToByteEncoder",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MulticastChannel",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducerBackPressureStrategy",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducerDelegate",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriterSinkDelegate",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOClientTCPBootstrapProtocol",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOClientTLSProvider",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSerialEventLoopExecutor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSingleStepByteToMessageDecoder",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSynchronousChannelOptions",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RecvByteBufferAllocator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Resolver",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionProvider",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteObservingByteToMessageDecoder"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AddressedEnvelope",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferView",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOptions",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelShouldQuiesceEvent",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/CircularBuffer",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopIterator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopPromise",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/FileRegion",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/FixedSizeRecvByteBufferAllocator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IOError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MarkedCircularBuffer",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAny",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducer",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriterError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAttemptedToRemoveHandlerMultipleTimesError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOClientTCPBootstrap",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOConnectionError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIODeadline",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIODirectoryEntry",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFailedToSetSocketNonBlockingError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFcntlFailedError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOIPProtocol",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOInsecureNoTLS",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBound",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOMulticastNotImplementedError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOMulticastNotSupportedError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIONetworkDevice",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPacketInfo",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOThrowingAsyncSequenceProducer",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOTooManyBytesError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NonBlockingFileIO",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Scheduled",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SingleConnectionFailure",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/TimeAmount",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/UnixDomainSocketPathWrongType",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/VsockAddress"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AllocatorOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AllowRemoteHalfClosureOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AutoReadOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/BacklogOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelDuplexHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ConnectTimeoutOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DatagramVectorReadMessageCountOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MaxMessagesPerReadOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPOSIXFileMode",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPreconcurrencySendable",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSendable",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RecvAllocatorOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionLevel",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionName",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionValue",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteBufferWaterMark",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteBufferWaterMarkOption",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteSpinOption"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageDecoderError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelEvent",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelPipelineError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/CloseMode",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DatagramChannelError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DecodingState",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Endianness",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IOData",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducerBackPressureStrategies",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOBSDSocket",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOEventLoopGroupProvider",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOExplicitCongestionNotificationState",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSingletons",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOThreadPoolError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketAddress",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketAddressError",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/System",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/VsockChannelEvents"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AcceptBackoffHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that implements a backoff for a ",
      "type" : "text"
    },
    {
      "code" : "ServerChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when accept produces an ",
      "type" : "text"
    },
    {
      "code" : "IOError",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "These errors are often recoverable by reducing the rate at which we call accept.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AcceptBackoffHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AcceptBackoffHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AcceptBackoffHandler"
    }
  ],
  "role" : "symbol",
  "title" : "AcceptBackoffHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/acceptbackoffhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator": {
  "abstract" : [
    {
      "code" : "RecvByteBufferAllocator",
      "type" : "codeVoice"
    },
    {
      "text" : " which will gracefully increment or decrement the buffer size on the feedback that was recorded.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AdaptiveRecvByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AdaptiveRecvByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "AdaptiveRecvByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AddressedEnvelope": {
  "abstract" : [
    {
      "text" : "A data structure for processing addressed datagrams, such as those used by UDP.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AddressedEnvelope"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AddressedEnvelope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AddressedEnvelope"
    }
  ],
  "role" : "symbol",
  "title" : "AddressedEnvelope",
  "type" : "topic",
  "url" : "\/documentation\/nio\/addressedenvelope"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AllocatorOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AllocatorOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AllocatorOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AllocatorOption"
    }
  ],
  "role" : "symbol",
  "title" : "AllocatorOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/allocatoroption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AllowRemoteHalfClosureOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AllowRemoteHalfClosureOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AllowRemoteHalfClosureOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AllowRemoteHalfClosureOption"
    }
  ],
  "role" : "symbol",
  "title" : "AllowRemoteHalfClosureOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/allowremotehalfclosureoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AutoReadOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AutoReadOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AutoReadOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AutoReadOption"
    }
  ],
  "role" : "symbol",
  "title" : "AutoReadOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/autoreadoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/BackPressureHandler": {
  "abstract" : [
    {
      "text" : "ChannelHandler implementation which enforces back-pressure by stopping to read from the remote peer when it cannot write back fast enough.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "It will start reading again once pending data was written.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BackPressureHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/BackPressureHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BackPressureHandler"
    }
  ],
  "role" : "symbol",
  "title" : "BackPressureHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/backpressurehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/BacklogOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BacklogOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/BacklogOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BacklogOption"
    }
  ],
  "role" : "symbol",
  "title" : "BacklogOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/backlogoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBuffer": {
  "abstract" : [
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "more bytes (octets).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBuffer"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBuffer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebuffer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBufferAllocator": {
  "abstract" : [
    {
      "text" : "The preferred allocator for ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " values. The allocation strategy is opaque but is currently libc’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "malloc",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "realloc",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "free",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBufferView": {
  "abstract" : [
    {
      "text" : "A view into a portion of a ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBufferView"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBufferView"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBufferView",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebufferview"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteToMessageDecoder": {
  "abstract" : [
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : "s decode bytes in a stream-like fashion from ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " to another message type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteToMessageDecoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteToMessageDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "ByteToMessageDecoder",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytetomessagedecoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteToMessageDecoderError": {
  "abstract" : [
    {
      "text" : "Common errors thrown by ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteToMessageDecoderError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageDecoderError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteToMessageDecoderError"
    }
  ],
  "role" : "symbol",
  "title" : "ByteToMessageDecoderError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytetomessagedecodererror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteToMessageHandler": {
  "abstract" : [
    {
      "text" : "A handler which turns a given ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : " into a ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can then be added to a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteToMessageHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteToMessageHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ByteToMessageHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytetomessagehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/Channel": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as read, write, connect, and bind.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Channel"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Channel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Channel"
    }
  ],
  "role" : "symbol",
  "title" : "Channel",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channel"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelCore": {
  "abstract" : [
    {
      "text" : "The core ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " methods that are for internal use of the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " implementation only.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelCore"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelCore",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelCore"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelCore",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelcore"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelDuplexHandler": {
  "abstract" : [
    {
      "text" : "A combination of ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "ChannelOutboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelDuplexHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelDuplexHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelDuplexHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelDuplexHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelduplexhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelError": {
  "abstract" : [
    {
      "text" : "An error that can occur on ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " operations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelError"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelEvent": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " related event that is passed through the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " to notify the user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelEvent"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelEvent",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelevent"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelHandler": {
  "abstract" : [
    {
      "text" : "Base protocol for handlers that handle I\/O events or intercept an I\/O operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelHandlerContext": {
  "abstract" : [
    {
      "text" : "Every ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " has – when added to a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " – a corresponding ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext",
      "type" : "codeVoice"
    },
    {
      "text" : " which is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the way ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s can interact with other ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s in the pipeline.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHandlerContext"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandlerContext",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHandlerContext"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHandlerContext",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelhandlercontext"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelInboundHandler": {
  "abstract" : [
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " which handles inbound I\/O events for a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelInboundHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInboundHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelInboundHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelInboundHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelinboundhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelInboundInvoker": {
  "abstract" : [
    {
      "text" : "Fire inbound events related to a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " through the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " until its end is reached or it’s consumed by a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelInboundInvoker"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInboundInvoker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelInboundInvoker"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelInboundInvoker",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelinboundinvoker"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelInvoker": {
  "abstract" : [
    {
      "text" : "A protocol that signals that outbound and inbound events are triggered by this invoker.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelInvoker"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInvoker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelInvoker"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelInvoker",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelinvoker"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelOption": {
  "abstract" : [
    {
      "text" : "A configuration option that can be set on a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " to configure different behaviour.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelOption"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channeloption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelOptions": {
  "abstract" : [
    {
      "text" : "Provides ",
      "type" : "text"
    },
    {
      "code" : "ChannelOption",
      "type" : "codeVoice"
    },
    {
      "text" : "s to be used with a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "Bootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelOptions"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelOptions"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelOptions",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channeloptions"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelOutboundHandler": {
  "abstract" : [
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " which handles outbound I\/O events or intercept an outbound I\/O operation for a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelOutboundHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channeloutboundhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelOutboundInvoker": {
  "abstract" : [
    {
      "text" : "Allows users to invoke an “outbound” operation related to a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " that will flow through the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " until",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "it will finally be executed by the the ",
      "type" : "text"
    },
    {
      "code" : "ChannelCore",
      "type" : "codeVoice"
    },
    {
      "text" : " implementation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundInvoker"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundInvoker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundInvoker"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelOutboundInvoker",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channeloutboundinvoker"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelPipeline": {
  "abstract" : [
    {
      "text" : "A list of ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s that handle or intercept inbound events and outbound operations of a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ". ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " implements an advanced form of the Intercepting Filter pattern",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to give a user full control over how an event is handled and how the ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s in a pipeline",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "interact with each other.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelPipeline"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelPipeline",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelPipeline"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelPipeline",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelpipeline"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelPipelineError": {
  "abstract" : [
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : " that is used by the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " to inform the user of an error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelPipelineError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelPipelineError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelPipelineError"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelPipelineError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelpipelineerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelShouldQuiesceEvent": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " user event that is sent when the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " has been asked to quiesce.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelShouldQuiesceEvent"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelShouldQuiesceEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelShouldQuiesceEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelShouldQuiesceEvent",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelshouldquiesceevent"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/CircularBuffer": {
  "abstract" : [
    {
      "text" : "An automatically expanding ring buffer implementation backed by a ",
      "type" : "text"
    },
    {
      "code" : "ContiguousArray",
      "type" : "codeVoice"
    },
    {
      "text" : ". Even though this implementation",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will automatically expand if more elements than ",
      "type" : "text"
    },
    {
      "code" : "initialCapacity",
      "type" : "codeVoice"
    },
    {
      "text" : " are stored, it’s advantageous to prevent",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expansions from happening frequently. Expansions will always force an allocation and a copy to happen.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CircularBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/CircularBuffer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CircularBuffer"
    }
  ],
  "role" : "symbol",
  "title" : "CircularBuffer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/circularbuffer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ClientBootstrap": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ClientBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to bootstrap a ",
      "type" : "text"
    },
    {
      "code" : "SocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when creating network clients.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClientBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ClientBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClientBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "ClientBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/clientbootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/CloseMode": {
  "abstract" : [
    {
      "text" : "Specify what kind of close operation is requested.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CloseMode"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/CloseMode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CloseMode"
    }
  ],
  "role" : "symbol",
  "title" : "CloseMode",
  "type" : "topic",
  "url" : "\/documentation\/nio\/closemode"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ConnectTimeoutOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConnectTimeoutOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ConnectTimeoutOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConnectTimeoutOption"
    }
  ],
  "role" : "symbol",
  "title" : "ConnectTimeoutOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/connecttimeoutoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/DatagramBootstrap": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "DatagramBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to bootstrap a ",
      "type" : "text"
    },
    {
      "code" : "DatagramChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when creating datagram clients",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and servers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DatagramBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DatagramBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DatagramBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "DatagramBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/datagrambootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/DatagramChannelError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DatagramChannelError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DatagramChannelError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DatagramChannelError"
    }
  ],
  "role" : "symbol",
  "title" : "DatagramChannelError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/datagramchannelerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/DatagramVectorReadMessageCountOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DatagramVectorReadMessageCountOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DatagramVectorReadMessageCountOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DatagramVectorReadMessageCountOption"
    }
  ],
  "role" : "symbol",
  "title" : "DatagramVectorReadMessageCountOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/datagramvectorreadmessagecountoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/DecodingState": {
  "abstract" : [
    {
      "text" : "State of the current decoding process.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DecodingState"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/DecodingState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DecodingState"
    }
  ],
  "role" : "symbol",
  "title" : "DecodingState",
  "type" : "topic",
  "url" : "\/documentation\/nio\/decodingstate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/Endianness": {
  "abstract" : [
    {
      "text" : "Endianness refers to the sequential order in which bytes are arranged into larger numerical values when stored in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "memory or when transmitted over digital links.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Endianness"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Endianness",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Endianness"
    }
  ],
  "role" : "symbol",
  "title" : "Endianness",
  "type" : "topic",
  "url" : "\/documentation\/nio\/endianness"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoop": {
  "abstract" : [
    {
      "text" : "An EventLoop processes IO \/ tasks in an endless loop for ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s until it’s closed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoop"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoop"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloop"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopError": {
  "abstract" : [
    {
      "text" : "Different ",
      "type" : "text"
    },
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : "s that are specific to ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " operations \/ implementations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopError"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventlooperror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopFuture": {
  "abstract" : [
    {
      "text" : "Holder for a result that will be provided later.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopFuture"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopFuture"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopFuture",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopfuture"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopGroup": {
  "abstract" : [
    {
      "text" : "Provides an endless stream of ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : "s to use.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopGroup"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopGroup"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopGroup",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopgroup"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopIterator": {
  "abstract" : [
    {
      "text" : "An iterator over the ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : "s forming an ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopIterator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopIterator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopIterator"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopIterator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopiterator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopPromise": {
  "abstract" : [
    {
      "text" : "A promise to provide a result later.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopPromise"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopPromise",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopPromise"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopPromise",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventlooppromise"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/FileDescriptor": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileDescriptor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/FileDescriptor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileDescriptor"
    }
  ],
  "role" : "symbol",
  "title" : "FileDescriptor",
  "type" : "topic",
  "url" : "\/documentation\/nio\/filedescriptor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/FileRegion": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "FileRegion",
      "type" : "codeVoice"
    },
    {
      "text" : " represent a readable portion usually created to be sent over the network.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileRegion"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/FileRegion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileRegion"
    }
  ],
  "role" : "symbol",
  "title" : "FileRegion",
  "type" : "topic",
  "url" : "\/documentation\/nio\/fileregion"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/FixedSizeRecvByteBufferAllocator": {
  "abstract" : [
    {
      "code" : "RecvByteBufferAllocator",
      "type" : "codeVoice"
    },
    {
      "text" : " which will always return a ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " with the same fixed size no matter what was recorded.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FixedSizeRecvByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/FixedSizeRecvByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FixedSizeRecvByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "FixedSizeRecvByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/fixedsizerecvbytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/IOData": {
  "abstract" : [
    {
      "code" : "IOData",
      "type" : "codeVoice"
    },
    {
      "text" : " unifies standard SwiftNIO types that are raw bytes of data; currently ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "FileRegion",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IOData"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IOData",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IOData"
    }
  ],
  "role" : "symbol",
  "title" : "IOData",
  "type" : "topic",
  "url" : "\/documentation\/nio\/iodata"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/IOError": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : " for an IO operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IOError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IOError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IOError"
    }
  ],
  "role" : "symbol",
  "title" : "IOError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/ioerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/IdleStateHandler": {
  "abstract" : [
    {
      "text" : "Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IdleStateHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IdleStateHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IdleStateHandler"
    }
  ],
  "role" : "symbol",
  "title" : "IdleStateHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/idlestatehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MarkedCircularBuffer": {
  "abstract" : [
    {
      "text" : "A circular buffer that allows one object at a time to be “marked” and easily identified and retrieved later.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MarkedCircularBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MarkedCircularBuffer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MarkedCircularBuffer"
    }
  ],
  "role" : "symbol",
  "title" : "MarkedCircularBuffer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/markedcircularbuffer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MaxMessagesPerReadOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MaxMessagesPerReadOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MaxMessagesPerReadOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MaxMessagesPerReadOption"
    }
  ],
  "role" : "symbol",
  "title" : "MaxMessagesPerReadOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/maxmessagesperreadoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MessageToByteEncoder": {
  "abstract" : [
    {
      "text" : "A protocol for straightforward encoders which encode custom messages to ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "To add a ",
      "type" : "text"
    },
    {
      "code" : "MessageToByteEncoder",
      "type" : "codeVoice"
    },
    {
      "text" : " to a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ", use",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "channel.pipeline.addHandler(MessageToByteHandler(myEncoder)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageToByteEncoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MessageToByteEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageToByteEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "MessageToByteEncoder",
  "type" : "topic",
  "url" : "\/documentation\/nio\/messagetobyteencoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MessageToByteHandler": {
  "abstract" : [
    {
      "text" : "A handler which turns a given ",
      "type" : "text"
    },
    {
      "code" : "MessageToByteEncoder",
      "type" : "codeVoice"
    },
    {
      "text" : " into a ",
      "type" : "text"
    },
    {
      "code" : "ChannelOutboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can then be added to a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageToByteHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MessageToByteHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageToByteHandler"
    }
  ],
  "role" : "symbol",
  "title" : "MessageToByteHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/messagetobytehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MultiThreadedEventLoopGroup": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " which will create multiple ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : "s, each tied to its own ",
      "type" : "text"
    },
    {
      "code" : "NIOThread",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MultiThreadedEventLoopGroup"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MultiThreadedEventLoopGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MultiThreadedEventLoopGroup"
    }
  ],
  "role" : "symbol",
  "title" : "MultiThreadedEventLoopGroup",
  "type" : "topic",
  "url" : "\/documentation\/nio\/multithreadedeventloopgroup"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MulticastChannel": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "MulticastChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " that supports IP multicast operations: that is, a channel that can join multicast",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "groups.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MulticastChannel"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MulticastChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MulticastChannel"
    }
  ],
  "role" : "symbol",
  "title" : "MulticastChannel",
  "type" : "topic",
  "url" : "\/documentation\/nio\/multicastchannel"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAny": {
  "abstract" : [
    {
      "code" : "NIOAny",
      "type" : "codeVoice"
    },
    {
      "text" : " is an opaque container for values of ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "any",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " type, similar to Swift’s builtin ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : " type. Contrary to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : " the overhead of ",
      "type" : "text"
    },
    {
      "code" : "NIOAny",
      "type" : "codeVoice"
    },
    {
      "text" : " depends on the the type of the wrapped value. Certain types that are important",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for the performance of a SwiftNIO application like ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "FileRegion",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "AddressEnvelope<ByteBuffer>",
      "type" : "codeVoice"
    },
    {
      "text" : " can be expected",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : " as",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "NIOAny",
      "type" : "codeVoice"
    },
    {
      "text" : " just like ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : " will contain them within an existential container.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAny"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAny",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAny"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAny",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioany"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncSequenceProducer": {
  "abstract" : [
    {
      "text" : "This is an ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : " that supports a unicast ",
      "type" : "text"
    },
    {
      "code" : "AsyncIterator",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducer"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncSequenceProducer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncsequenceproducer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncSequenceProducerBackPressureStrategies": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducerBackPressureStrategies"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducerBackPressureStrategies",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducerBackPressureStrategies"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncSequenceProducerBackPressureStrategies",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncsequenceproducerbackpressurestrategies"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncSequenceProducerBackPressureStrategy": {
  "abstract" : [
    {
      "text" : "A protocol for the back-pressure strategy of the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducerBackPressureStrategy"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducerBackPressureStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducerBackPressureStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncSequenceProducerBackPressureStrategy",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncsequenceproducerbackpressurestrategy"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncSequenceProducerDelegate": {
  "abstract" : [
    {
      "text" : "The delegate of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducerDelegate"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncSequenceProducerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncSequenceProducerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncSequenceProducerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncsequenceproducerdelegate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncWriter": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is a type used to bridge elements from the Swift Concurrency domain into",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a synchronous world. The ",
      "type" : "text"
    },
    {
      "code" : "Task",
      "type" : "codeVoice"
    },
    {
      "text" : "s that are yielding to the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " are the producers.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Whereas the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriterSinkDelegate",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is the consumer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncWriter"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncWriter"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncWriter",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncwriter"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncWriterError": {
  "abstract" : [
    {
      "text" : "Errors thrown by the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncWriterError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriterError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncWriterError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncWriterError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncwritererror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAsyncWriterSinkDelegate": {
  "abstract" : [
    {
      "text" : "The delegate of the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". It is the consumer of the yielded writes to the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Furthermore, the delegate gets informed when the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " terminated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncWriterSinkDelegate"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAsyncWriterSinkDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncWriterSinkDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncWriterSinkDelegate",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioasyncwritersinkdelegate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOAttemptedToRemoveHandlerMultipleTimesError": {
  "abstract" : [
    {
      "text" : "The removal of a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " using ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline.removeHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " has been attempted more than once.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAttemptedToRemoveHandlerMultipleTimesError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOAttemptedToRemoveHandlerMultipleTimesError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAttemptedToRemoveHandlerMultipleTimesError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAttemptedToRemoveHandlerMultipleTimesError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioattemptedtoremovehandlermultipletimeserror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOBSDSocket": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOBSDSocket"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOBSDSocket",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOBSDSocket"
    }
  ],
  "role" : "symbol",
  "title" : "NIOBSDSocket",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niobsdsocket"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOClientTCPBootstrap": {
  "abstract" : [
    {
      "code" : "NIOClientTCPBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "NIO Transport Services, or other ways.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOClientTCPBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOClientTCPBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOClientTCPBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "NIOClientTCPBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioclienttcpbootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOClientTCPBootstrapProtocol": {
  "abstract" : [
    {
      "code" : "NIOClientTCPBootstrapProtocol",
      "type" : "codeVoice"
    },
    {
      "text" : " is implemented by various underlying transport mechanisms. Typically,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "this will be the BSD Sockets API implemented by ",
      "type" : "text"
    },
    {
      "code" : "ClientBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOClientTCPBootstrapProtocol"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOClientTCPBootstrapProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOClientTCPBootstrapProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "NIOClientTCPBootstrapProtocol",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioclienttcpbootstrapprotocol"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOClientTLSProvider": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOClientTLSProvider"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOClientTLSProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOClientTLSProvider"
    }
  ],
  "role" : "symbol",
  "title" : "NIOClientTLSProvider",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioclienttlsprovider"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOCloseOnErrorHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that closes the channel when an error is caught",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOCloseOnErrorHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOCloseOnErrorHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOCloseOnErrorHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOCloseOnErrorHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niocloseonerrorhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOConnectionError": {
  "abstract" : [
    {
      "text" : "A representation of all the errors that happened during an attempt to connect",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to a given host and port.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOConnectionError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOConnectionError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOConnectionError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOConnectionError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioconnectionerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIODeadline": {
  "abstract" : [
    {
      "text" : "Represents a point in time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIODeadline"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIODeadline",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIODeadline"
    }
  ],
  "role" : "symbol",
  "title" : "NIODeadline",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niodeadline"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIODirectoryEntry": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "NIODirectoryEntry",
      "type" : "codeVoice"
    },
    {
      "text" : " represents a single directory entry.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIODirectoryEntry"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIODirectoryEntry",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIODirectoryEntry"
    }
  ],
  "role" : "symbol",
  "title" : "NIODirectoryEntry",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niodirectoryentry"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOEventLoopGroupProvider": {
  "abstract" : [
    {
      "text" : "This type is intended to be used by libraries which use NIO, and offer their users either the option",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to ",
      "type" : "text"
    },
    {
      "code" : ".share",
      "type" : "codeVoice"
    },
    {
      "text" : " an existing event loop group or create (and manage) a new one (",
      "type" : "text"
    },
    {
      "code" : ".createNew",
      "type" : "codeVoice"
    },
    {
      "text" : ") and let it be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "managed by given library and its lifecycle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOEventLoopGroupProvider"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOEventLoopGroupProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOEventLoopGroupProvider"
    }
  ],
  "role" : "symbol",
  "title" : "NIOEventLoopGroupProvider",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioeventloopgroupprovider"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOExplicitCongestionNotificationState": {
  "abstract" : [
    {
      "text" : "Possible Explicit Congestion Notification States",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOExplicitCongestionNotificationState"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOExplicitCongestionNotificationState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOExplicitCongestionNotificationState"
    }
  ],
  "role" : "symbol",
  "title" : "NIOExplicitCongestionNotificationState",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioexplicitcongestionnotificationstate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOFailedToSetSocketNonBlockingError": {
  "abstract" : [
    {
      "code" : "NIOFailedToSetSocketNonBlockingError",
      "type" : "codeVoice"
    },
    {
      "text" : " indicates that NIO was unable to set a socket to non-blocking mode, either",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "when connecting a socket as a client or when accepting a socket as a server.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOFailedToSetSocketNonBlockingError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFailedToSetSocketNonBlockingError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOFailedToSetSocketNonBlockingError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOFailedToSetSocketNonBlockingError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niofailedtosetsocketnonblockingerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOFcntlFailedError": {
  "abstract" : [
    {
      "code" : "NIOFcntlFailedError",
      "type" : "codeVoice"
    },
    {
      "text" : " indicates that NIO was unable to perform an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "operation on a socket.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOFcntlFailedError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFcntlFailedError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOFcntlFailedError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOFcntlFailedError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niofcntlfailederror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOFileHandle": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "NIOFileHandle",
      "type" : "codeVoice"
    },
    {
      "text" : " is a handle to an open file.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOFileHandle"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFileHandle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOFileHandle"
    }
  ],
  "role" : "symbol",
  "title" : "NIOFileHandle",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niofilehandle"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOIPProtocol": {
  "abstract" : [
    {
      "text" : "In the Internet Protocol version 4 (IPv4) [RFC791] there is a field",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "called “Protocol” to identify the next level protocol.  This is an 8",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "bit field.  In Internet Protocol version 6 (IPv6) [RFC8200], this field",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is called the “Next Header” field.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOIPProtocol"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOIPProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOIPProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "NIOIPProtocol",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioipprotocol"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOInsecureNoTLS": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOInsecureNoTLS"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOInsecureNoTLS",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOInsecureNoTLS"
    }
  ],
  "role" : "symbol",
  "title" : "NIOInsecureNoTLS",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioinsecurenotls"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOLoopBound": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBound",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is an always-",
      "type" : "text"
    },
    {
      "code" : "Sendable",
      "type" : "codeVoice"
    },
    {
      "text" : ", value-typed container allowing you access to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBound\/value",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " if and only if",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "you are accessing it on the right ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOLoopBound"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBound",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOLoopBound"
    }
  ],
  "role" : "symbol",
  "title" : "NIOLoopBound",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioloopbound"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOLoopBound/value": {
  "abstract" : [
    {
      "text" : "Access the ",
      "type" : "text"
    },
    {
      "code" : "value",
      "type" : "codeVoice"
    },
    {
      "text" : " with the precondition that the code is running on ",
      "type" : "text"
    },
    {
      "code" : "eventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBound\/value",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioloopbound\/value"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOLoopBoundBox": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBoundBox",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is an always-",
      "type" : "text"
    },
    {
      "code" : "Sendable",
      "type" : "codeVoice"
    },
    {
      "text" : ", reference-typed container allowing you access to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBoundBox\/value",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " if and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "only if you are accessing it on the right ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOLoopBoundBox"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBoundBox",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOLoopBoundBox"
    }
  ],
  "role" : "symbol",
  "title" : "NIOLoopBoundBox",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioloopboundbox"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOLoopBoundBox/value": {
  "abstract" : [
    {
      "text" : "Access the ",
      "type" : "text"
    },
    {
      "code" : "value",
      "type" : "codeVoice"
    },
    {
      "text" : " with the precondition that the code is running on ",
      "type" : "text"
    },
    {
      "code" : "eventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOLoopBoundBox\/value",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioloopboundbox\/value"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOMulticastNotImplementedError": {
  "abstract" : [
    {
      "text" : "Multicast has not been properly implemented on this channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOMulticastNotImplementedError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOMulticastNotImplementedError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOMulticastNotImplementedError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOMulticastNotImplementedError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niomulticastnotimplementederror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOMulticastNotSupportedError": {
  "abstract" : [
    {
      "text" : "Multicast is not supported on this interface.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOMulticastNotSupportedError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOMulticastNotSupportedError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOMulticastNotSupportedError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOMulticastNotSupportedError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niomulticastnotsupportederror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIONetworkDevice": {
  "abstract" : [
    {
      "text" : "A representation of a single network device on a system.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIONetworkDevice"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIONetworkDevice",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIONetworkDevice"
    }
  ],
  "role" : "symbol",
  "title" : "NIONetworkDevice",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nionetworkdevice"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIONetworkInterface": {
  "abstract" : [
    {
      "text" : "A representation of a single network interface on a system.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIONetworkInterface"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIONetworkInterface",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIONetworkInterface"
    }
  ],
  "role" : "symbol",
  "title" : "NIONetworkInterface",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nionetworkinterface"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOPOSIXFileMode": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOPOSIXFileMode"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPOSIXFileMode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOPOSIXFileMode"
    }
  ],
  "role" : "symbol",
  "title" : "NIOPOSIXFileMode",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioposixfilemode"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOPacketInfo": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOPacketInfo"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPacketInfo",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOPacketInfo"
    }
  ],
  "role" : "symbol",
  "title" : "NIOPacketInfo",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niopacketinfo"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOPipeBootstrap": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "NIOPipeBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to bootstrap a ",
      "type" : "text"
    },
    {
      "code" : "PipeChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " which uses two (uni-directional) UNIX pipes",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and makes a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " out of them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOPipeBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPipeBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOPipeBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "NIOPipeBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niopipebootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOPreconcurrencySendable": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOPreconcurrencySendable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOPreconcurrencySendable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOPreconcurrencySendable"
    }
  ],
  "role" : "symbol",
  "title" : "NIOPreconcurrencySendable",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niopreconcurrencysendable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIORawSocketBootstrap": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RawSocketBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to interact with IP based protocols other then TCP and UDP.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIORawSocketBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIORawSocketBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIORawSocketBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "NIORawSocketBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niorawsocketbootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSendable": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSendable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSendable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSendable"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSendable",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niosendable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSerialEventLoopExecutor": {
  "abstract" : [
    {
      "text" : "A helper protocol that can be mixed in to a NIO ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to provide an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "automatic conformance to ",
      "type" : "text"
    },
    {
      "code" : "SerialExecutor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSerialEventLoopExecutor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSerialEventLoopExecutor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSerialEventLoopExecutor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSerialEventLoopExecutor",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nioserialeventloopexecutor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSingleStepByteToMessageDecoder": {
  "abstract" : [
    {
      "text" : "A simplified version of ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : " that can generate zero or one messages for each invocation of ",
      "type" : "text"
    },
    {
      "code" : "decode",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "decodeLast",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Having ",
      "type" : "text"
    },
    {
      "code" : "decode",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "decodeLast",
      "type" : "codeVoice"
    },
    {
      "text" : " return an optional message avoids re-entrancy problems, since the functions relinquish exclusive access",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to the ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " when returning. This allows for greatly simplified processing.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSingleStepByteToMessageDecoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSingleStepByteToMessageDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSingleStepByteToMessageDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSingleStepByteToMessageDecoder",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niosinglestepbytetomessagedecoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSingleStepByteToMessageProcessor": {
  "abstract" : [
    {
      "code" : "NIOSingleStepByteToMessageProcessor",
      "type" : "codeVoice"
    },
    {
      "text" : " uses a ",
      "type" : "text"
    },
    {
      "code" : "NIOSingleStepByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : " to produce messages",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "from a stream of incoming bytes. It works like ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " but may be used outside of the channel pipeline. This allows",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "processing of wrapped protocols in a general way.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSingleStepByteToMessageProcessor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSingleStepByteToMessageProcessor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSingleStepByteToMessageProcessor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSingleStepByteToMessageProcessor",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niosinglestepbytetomessageprocessor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSingletons": {
  "abstract" : [
    {
      "text" : "SwiftNIO provided singleton resources for programs & libraries that don’t need full control over all operating",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "system resources. This type holds sizing (how many loops\/threads) suggestions.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSingletons"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSingletons",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSingletons"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSingletons",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niosingletons"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOSynchronousChannelOptions": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSynchronousChannelOptions"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOSynchronousChannelOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSynchronousChannelOptions"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSynchronousChannelOptions",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niosynchronouschanneloptions"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOThreadPool": {
  "abstract" : [
    {
      "text" : "A thread pool that should be used if some (kernel thread) blocking work",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "needs to be performed for which no non-blocking API exists.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOThreadPool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOThreadPool",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOThreadPool"
    }
  ],
  "role" : "symbol",
  "title" : "NIOThreadPool",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niothreadpool"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOThreadPoolError": {
  "abstract" : [
    {
      "text" : "Errors that may be thrown when executing work on a ",
      "type" : "text"
    },
    {
      "code" : "NIOThreadPool",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOThreadPoolError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOThreadPoolError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOThreadPoolError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOThreadPoolError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niothreadpoolerror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOThrowingAsyncSequenceProducer": {
  "abstract" : [
    {
      "text" : "This is an ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : " that supports a unicast ",
      "type" : "text"
    },
    {
      "code" : "AsyncIterator",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOThrowingAsyncSequenceProducer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOThrowingAsyncSequenceProducer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOThrowingAsyncSequenceProducer"
    }
  ],
  "role" : "symbol",
  "title" : "NIOThrowingAsyncSequenceProducer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niothrowingasyncsequenceproducer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOTooManyBytesError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOTooManyBytesError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOTooManyBytesError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOTooManyBytesError"
    }
  ],
  "role" : "symbol",
  "title" : "NIOTooManyBytesError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niotoomanybyteserror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NonBlockingFileIO": {
  "abstract" : [
    {
      "code" : "NonBlockingFileIO",
      "type" : "codeVoice"
    },
    {
      "text" : " is a helper that allows you to read files without blocking the calling thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NonBlockingFileIO"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NonBlockingFileIO",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NonBlockingFileIO"
    }
  ],
  "role" : "symbol",
  "title" : "NonBlockingFileIO",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nonblockingfileio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RecvAllocatorOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RecvAllocatorOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RecvAllocatorOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RecvAllocatorOption"
    }
  ],
  "role" : "symbol",
  "title" : "RecvAllocatorOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/recvallocatoroption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RecvByteBufferAllocator": {
  "abstract" : [
    {
      "text" : "Allocates ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : "s to be used to read bytes from a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " and records the number of the actual bytes that were used.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RecvByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RecvByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RecvByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "RecvByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/recvbytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RemovableChannelHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be dynamically removed from a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " whilst",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is operating normally.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is required to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " (using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ") as soon as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "RemovableChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/removablechannelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RepeatedTask": {
  "abstract" : [
    {
      "text" : "Returned once a task was scheduled to be repeatedly executed on the ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RepeatedTask"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RepeatedTask",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RepeatedTask"
    }
  ],
  "role" : "symbol",
  "title" : "RepeatedTask",
  "type" : "topic",
  "url" : "\/documentation\/nio\/repeatedtask"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/Resolver": {
  "abstract" : [
    {
      "text" : "A protocol that covers an object that does DNS lookups.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Resolver"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Resolver",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Resolver"
    }
  ],
  "role" : "symbol",
  "title" : "Resolver",
  "type" : "topic",
  "url" : "\/documentation\/nio\/resolver"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/Scheduled": {
  "abstract" : [
    {
      "text" : "Returned once a task was scheduled on the ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " for later execution.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scheduled"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/Scheduled",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scheduled"
    }
  ],
  "role" : "symbol",
  "title" : "Scheduled",
  "type" : "topic",
  "url" : "\/documentation\/nio\/scheduled"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to bootstrap a ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when creating network servers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ServerBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ServerBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "ServerBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SingleConnectionFailure": {
  "abstract" : [
    {
      "text" : "An error that occurred during connection to a given target.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SingleConnectionFailure"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SingleConnectionFailure",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SingleConnectionFailure"
    }
  ],
  "role" : "symbol",
  "title" : "SingleConnectionFailure",
  "type" : "topic",
  "url" : "\/documentation\/nio\/singleconnectionfailure"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketAddress": {
  "abstract" : [
    {
      "text" : "Represent a socket address to which we may want to connect or bind.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketAddress"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketAddress",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketAddress"
    }
  ],
  "role" : "symbol",
  "title" : "SocketAddress",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketaddress"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketAddressError": {
  "abstract" : [
    {
      "text" : "Special ",
      "type" : "text"
    },
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : " that may be thrown if we fail to create a ",
      "type" : "text"
    },
    {
      "code" : "SocketAddress",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketAddressError"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketAddressError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketAddressError"
    }
  ],
  "role" : "symbol",
  "title" : "SocketAddressError",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketaddresserror"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketOption"
    }
  ],
  "role" : "symbol",
  "title" : "SocketOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketOptionLevel": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketOptionLevel"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionLevel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketOptionLevel"
    }
  ],
  "role" : "symbol",
  "title" : "SocketOptionLevel",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketoptionlevel"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketOptionName": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketOptionName"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionName",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketOptionName"
    }
  ],
  "role" : "symbol",
  "title" : "SocketOptionName",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketoptionname"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketOptionProvider": {
  "abstract" : [
    {
      "text" : "This protocol defines an object, most commonly a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ", that supports",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "setting and getting socket options (via ",
      "type" : "text"
    },
    {
      "code" : "setsockopt",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "getsockopt",
      "type" : "codeVoice"
    },
    {
      "text" : " or similar).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "It provides a strongly typed API that makes working with larger, less-common",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "socket options easier than the ",
      "type" : "text"
    },
    {
      "code" : "ChannelOption",
      "type" : "codeVoice"
    },
    {
      "text" : " API allows.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketOptionProvider"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketOptionProvider"
    }
  ],
  "role" : "symbol",
  "title" : "SocketOptionProvider",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketoptionprovider"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/SocketOptionValue": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SocketOptionValue"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/SocketOptionValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SocketOptionValue"
    }
  ],
  "role" : "symbol",
  "title" : "SocketOptionValue",
  "type" : "topic",
  "url" : "\/documentation\/nio\/socketoptionvalue"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/System": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "System"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/System",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "System"
    }
  ],
  "role" : "symbol",
  "title" : "System",
  "type" : "topic",
  "url" : "\/documentation\/nio\/system"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ThreadSpecificVariable": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ThreadSpecificVariable",
      "type" : "codeVoice"
    },
    {
      "text" : " is a variable that can be read and set like a normal variable except that it holds",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "different variables per thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ThreadSpecificVariable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ThreadSpecificVariable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ThreadSpecificVariable"
    }
  ],
  "role" : "symbol",
  "title" : "ThreadSpecificVariable",
  "type" : "topic",
  "url" : "\/documentation\/nio\/threadspecificvariable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/TimeAmount": {
  "abstract" : [
    {
      "text" : "Represents a time ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "interval",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TimeAmount"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/TimeAmount",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TimeAmount"
    }
  ],
  "role" : "symbol",
  "title" : "TimeAmount",
  "type" : "topic",
  "url" : "\/documentation\/nio\/timeamount"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/UnixDomainSocketPathWrongType": {
  "abstract" : [
    {
      "text" : "The requested UDS path exists and has wrong type (not a socket).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnixDomainSocketPathWrongType"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/UnixDomainSocketPathWrongType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnixDomainSocketPathWrongType"
    }
  ],
  "role" : "symbol",
  "title" : "UnixDomainSocketPathWrongType",
  "type" : "topic",
  "url" : "\/documentation\/nio\/unixdomainsocketpathwrongtype"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/VsockAddress": {
  "abstract" : [
    {
      "text" : "A vsock socket address.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VsockAddress"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/VsockAddress",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VsockAddress"
    }
  ],
  "role" : "symbol",
  "title" : "VsockAddress",
  "type" : "topic",
  "url" : "\/documentation\/nio\/vsockaddress"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/VsockChannelEvents": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VsockChannelEvents"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/VsockChannelEvents",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VsockChannelEvents"
    }
  ],
  "role" : "symbol",
  "title" : "VsockChannelEvents",
  "type" : "topic",
  "url" : "\/documentation\/nio\/vsockchannelevents"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/WriteBufferWaterMark": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WriteBufferWaterMark"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteBufferWaterMark",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WriteBufferWaterMark"
    }
  ],
  "role" : "symbol",
  "title" : "WriteBufferWaterMark",
  "type" : "topic",
  "url" : "\/documentation\/nio\/writebufferwatermark"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/WriteBufferWaterMarkOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WriteBufferWaterMarkOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteBufferWaterMarkOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WriteBufferWaterMarkOption"
    }
  ],
  "role" : "symbol",
  "title" : "WriteBufferWaterMarkOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/writebufferwatermarkoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/WriteObservingByteToMessageDecoder": {
  "abstract" : [
    {
      "text" : "Some ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : "s need to observe ",
      "type" : "text"
    },
    {
      "code" : "write",
      "type" : "codeVoice"
    },
    {
      "text" : "s (which are outbound events). ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : "s which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "implement the ",
      "type" : "text"
    },
    {
      "code" : "WriteObservingByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol will be notified about every outbound write.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WriteObservingByteToMessageDecoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteObservingByteToMessageDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WriteObservingByteToMessageDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "WriteObservingByteToMessageDecoder",
  "type" : "topic",
  "url" : "\/documentation\/nio\/writeobservingbytetomessagedecoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/WriteSpinOption": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WriteSpinOption"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/WriteSpinOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WriteSpinOption"
    }
  ],
  "role" : "symbol",
  "title" : "WriteSpinOption",
  "type" : "topic",
  "url" : "\/documentation\/nio\/writespinoption"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/EmbeddedChannel": {
  "abstract" : [
    {
      "code" : "EmbeddedChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " implementation that does neither any",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "actual IO nor has a proper eventing mechanism. The prime use-case for",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "EmbeddedChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " is in unit tests when you want to feed the inbound events",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and check the outbound events manually.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmbeddedChannel"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/EmbeddedChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmbeddedChannel"
    }
  ],
  "role" : "symbol",
  "title" : "EmbeddedChannel",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/embeddedchannel"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/EmbeddedEventLoop": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " that is embedded in the current running context with no external",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "control.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmbeddedEventLoop"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/EmbeddedEventLoop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmbeddedEventLoop"
    }
  ],
  "role" : "symbol",
  "title" : "EmbeddedEventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/embeddedeventloop"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingChannel": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " with fine-grained control for testing.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncTestingChannel"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncTestingChannel"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncTestingChannel",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingchannel"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOEmbedded/NIOAsyncTestingEventLoop": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " that is thread safe and whose execution is fully controlled",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by the user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOAsyncTestingEventLoop"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOEmbedded\/NIOAsyncTestingEventLoop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOAsyncTestingEventLoop"
    }
  ],
  "role" : "symbol",
  "title" : "NIOAsyncTestingEventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nioembedded\/nioasynctestingeventloop"
}
}
}