{
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " allows an implementation to receive notifications about request processing and to control how response parts are processed.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:15AsyncHTTPClient0B16ResponseDelegateP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "HTTPClientResponseDelegate"
      }
    ],
    "modules" : [
      {
        "name" : "AsyncHTTPClient"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "HTTPClientResponseDelegate"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "HTTPClientResponseDelegate"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "HTTPClientResponseDelegate"
            },
            {
              "kind" : "text",
              "text" : " : AnyObject"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "class to the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClient\/execute(request:delegate:eventLoop:deadline:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " method and this package will call each delegate method appropriately as the request takes place.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Backpressure",
          "level" : 3,
          "text" : "Backpressure",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " can be used to exert backpressure on the server response. This is achieved by way of the futures returned from",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The following functions are part of the “backpressure system” in the delegate:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "The first three methods are strictly ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "exclusive",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ", with that exclusivity managed by the futures returned by ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". What this means is that until the returned future is completed, none of these three methods will be called",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "again. This allows delegates to rate limit the server to a capacity it can manage. ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " does not return a future,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "as we are expecting no more data from the server at this time.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is somewhat special: it signals the end of this regime. ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "is not exclusive: it may be called at any time, even if a returned future is not yet completed. ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is terminal, meaning",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that once it has been called none of these four methods will be called again. This can be used as a signal to abandon all outstanding work.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "This delegate is strongly held by the ",
                  "type" : "text"
                },
                {
                  "code" : "HTTPTaskHandler",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "for the duration of the ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClient\/Request",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " processing and will be",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "released together with the ",
                  "type" : "text"
                },
                {
                  "code" : "HTTPTaskHandler",
                  "type" : "codeVoice"
                },
                {
                  "text" : " when channel is closed.",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Users of the library are not required to keep a reference to the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "object that implements this protocol, but may do so if needed.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/FileDownloadDelegate",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientCopyingDelegate",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/ResponseAccumulator"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response"
      ],
      "title" : "Associated Types"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequest(task:)-9od5p",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestHead(task:_:)-6khai",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestPart(task:_:)-4qxap"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/asynchttpclient\/httpclientresponsedelegate"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AsyncHTTPClient",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/FileDownloadDelegate": {
  "abstract" : [
    {
      "text" : "Handles a streaming download to a given file path, allowing headers and progress to be reported.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileDownloadDelegate"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/FileDownloadDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileDownloadDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "FileDownloadDelegate",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/filedownloaddelegate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClient/Request": {
  "abstract" : [
    {
      "text" : "Represents an HTTP request.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Request"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClient\/Request",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Request"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPClient.Request",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclient\/request"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClient/execute(request:delegate:eventLoop:deadline:)": {
  "abstract" : [
    {
      "text" : "Execute arbitrary HTTP request and handle response processing using provided delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "execute"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Delegate"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "request"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C7RequestV",
      "text" : "Request"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "delegate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV7NIOCore11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp",
      "text" : "Delegate"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "eventLoop"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV",
      "text" : "EventLoopPreference"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "deadline"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore11NIODeadlineV",
      "text" : "NIODeadline"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV7NIOCore11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp",
      "text" : "Delegate"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClient\/execute(request:delegate:eventLoop:deadline:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "execute(request:delegate:eventLoop:deadline:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclient\/execute(request:delegate:eventloop:deadline:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientCopyingDelegate": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " that wraps a callback.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPClientCopyingDelegate"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientCopyingDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPClientCopyingDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPClientCopyingDelegate",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientcopyingdelegate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " allows an implementation to receive notifications about request processing and to control how response parts are processed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPClientResponseDelegate"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPClientResponseDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPClientResponseDelegate",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/Response": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Response"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Response",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/response"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didFinishRequest(task:)": {
  "abstract" : [
    {
      "text" : "Called when the complete HTTP request is finished. You must return an instance of your ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " associated type. Will be called once, except if an error occurred.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didFinishRequest"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didFinishRequest(task:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didfinishrequest(task:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveBodyPart(task:_:)-4fd4v": {
  "abstract" : [
    {
      "text" : "Called when part of a response body is received. Could be called zero or more times.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You must return an ",
      "type" : "text"
    },
    {
      "code" : "EventLoopFuture<Void>",
      "type" : "codeVoice"
    },
    {
      "text" : " that you complete when you have finished processing the body part.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can create an already succeeded future by calling ",
      "type" : "text"
    },
    {
      "code" : "task.eventLoop.makeSucceededFuture(())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didReceiveBodyPart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
      "text" : "ByteBuffer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didReceiveBodyPart(task:_:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivebodypart(task:_:)-4fd4v"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveError(task:_:)-fhsg": {
  "abstract" : [
    {
      "text" : "Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didReceiveError"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didReceiveError(task:_:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceiveerror(task:_:)-fhsg"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveHead(task:_:)-9r4xd": {
  "abstract" : [
    {
      "text" : "Called when response head is received. Will be called once.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You must return an ",
      "type" : "text"
    },
    {
      "code" : "EventLoopFuture<Void>",
      "type" : "codeVoice"
    },
    {
      "text" : " that you complete when you have finished processing the body part.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can create an already succeeded future by calling ",
      "type" : "text"
    },
    {
      "code" : "task.eventLoop.makeSucceededFuture(())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didReceiveHead"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8NIOHTTP116HTTPResponseHeadV",
      "text" : "HTTPResponseHead"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didReceiveHead(task:_:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-9r4xd"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequest(task:)-9od5p": {
  "abstract" : [
    {
      "text" : "Called when the request is fully sent. Will be called once.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didSendRequest"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequest(task:)-9od5p",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didSendRequest(task:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequest(task:)-9od5p"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequestHead(task:_:)-6khai": {
  "abstract" : [
    {
      "text" : "Called when the request head is sent. Will be called once.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didSendRequestHead"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8NIOHTTP115HTTPRequestHeadV",
      "text" : "HTTPRequestHead"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestHead(task:_:)-6khai",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didSendRequestHead(task:_:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequesthead(task:_:)-6khai"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequestPart(task:_:)-4qxap": {
  "abstract" : [
    {
      "text" : "Called when a part of the request body is sent. Could be called zero or more times.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didSendRequestPart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "task"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C",
      "text" : "HTTPClient"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B0C4TaskC",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa",
      "text" : "Response"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore6IODataO",
      "text" : "IOData"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestPart(task:_:)-4qxap",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didSendRequestPart(task:_:)",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequestpart(task:_:)-4qxap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/AsyncHTTPClient/ResponseAccumulator": {
  "abstract" : [
    {
      "text" : "The default ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ResponseAccumulator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/AsyncHTTPClient\/ResponseAccumulator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ResponseAccumulator"
    }
  ],
  "role" : "symbol",
  "title" : "ResponseAccumulator",
  "type" : "topic",
  "url" : "\/documentation\/asynchttpclient\/responseaccumulator"
}
}
}