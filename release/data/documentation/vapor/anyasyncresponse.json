{
  "abstract" : [
    {
      "text" : "A type erased response useful for routes that can return more than one type.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5Vapor16AnyAsyncResponseV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AnyAsyncResponse"
      }
    ],
    "modules" : [
      {
        "name" : "Vapor"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AnyAsyncResponse"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "AnyAsyncResponse"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AnyAsyncResponse"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "code" : [
            "router.get(\"foo\") { req -> AnyAsyncResponse in",
            "    if \/* something *\/ {",
            "        return AnyAsyncResponse(42)",
            "    } else {",
            "        return AnyAsyncResponse(\"string\")",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "This can also be done using a ",
              "type" : "text"
            },
            {
              "code" : "AsyncResponseEncodable",
              "type" : "codeVoice"
            },
            {
              "text" : " enum.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "enum IntOrString: AsyncResponseEncodable {",
            "    case int(Int)",
            "    case string(String)",
            "",
            "    func encode(for req: Request) throws -> EventLoopFuture<Response> {",
            "        switch self {",
            "        case .int(let i): return try i.encode(for: req)",
            "        case .string(let s): return try s.encode(for: req)",
            "        }",
            "    }",
            "}",
            "",
            "router.get(\"foo\") { req -> IntOrString in",
            "    if \/* something *\/ {",
            "        return .int(42)",
            "    } else {",
            "        return .string(\"string\")",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AsyncResponseEncodable"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse\/init(_:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse\/encodeResponse(for:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse\/AsyncResponseEncodable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/vapor\/anyasyncresponse"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Vapor",
  "type" : "topic",
  "url" : "\/documentation\/vapor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/AnyAsyncResponse": {
  "abstract" : [
    {
      "text" : "A type erased response useful for routes that can return more than one type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyAsyncResponse"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyAsyncResponse"
    }
  ],
  "role" : "symbol",
  "title" : "AnyAsyncResponse",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/anyasyncresponse"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/AnyAsyncResponse/AsyncResponseEncodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse\/AsyncResponseEncodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AsyncResponseEncodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/anyasyncresponse\/asyncresponseencodable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/AnyAsyncResponse/encodeResponse(for:)": {
  "abstract" : [
    {
      "text" : "Encodes an instance of ",
      "type" : "text"
    },
    {
      "code" : "Self",
      "type" : "codeVoice"
    },
    {
      "text" : " to a ",
      "type" : "text"
    },
    {
      "code" : "HTTPResponse",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encodeResponse"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor7RequestC",
      "text" : "Request"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor8ResponseC",
      "text" : "Response"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse\/encodeResponse(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encodeResponse(for:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/anyasyncresponse\/encoderesponse(for:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/AnyAsyncResponse/init(_:)": {
  "abstract" : [
    {
      "text" : "Creates a new ",
      "type" : "text"
    },
    {
      "code" : "AnyAsyncResponse",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor22AsyncResponseEncodableP",
      "text" : "AsyncResponseEncodable"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AnyAsyncResponse\/init(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/anyasyncresponse\/init(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/AsyncResponseEncodable": {
  "abstract" : [
    {
      "text" : "Can convert ",
      "type" : "text"
    },
    {
      "code" : "self",
      "type" : "codeVoice"
    },
    {
      "text" : " to a ",
      "type" : "text"
    },
    {
      "code" : "Response",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncResponseEncodable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/AsyncResponseEncodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncResponseEncodable"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncResponseEncodable",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/asyncresponseencodable"
}
}
}