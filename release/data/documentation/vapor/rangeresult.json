{
  "abstract" : [
    {
      "text" : "Type used by ",
      "type" : "text"
    },
    {
      "code" : "Range",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "Count",
      "type" : "codeVoice"
    },
    {
      "text" : " validators to indicate where a value fell within a range.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5Vapor11RangeResultO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "RangeResult"
      }
    ],
    "modules" : [
      {
        "name" : "Vapor"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "RangeResult"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "RangeResult"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "RangeResult"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SL",
              "text" : "Comparable"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/SQ",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/between(min:max:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/greaterThanMax(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/greaterThanOrEqualToMin(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/lessThanMin(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/lessThanOrEqualToMax(_:)"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/vapor\/rangeresult"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/SQ": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Vapor",
  "type" : "topic",
  "url" : "\/documentation\/vapor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult": {
  "abstract" : [
    {
      "text" : "Type used by ",
      "type" : "text"
    },
    {
      "code" : "Range",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "Count",
      "type" : "codeVoice"
    },
    {
      "text" : " validators to indicate where a value fell within a range.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RangeResult"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RangeResult"
    }
  ],
  "role" : "symbol",
  "title" : "RangeResult",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult\/equatable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult/between(min:max:)": {
  "abstract" : [
    {
      "text" : "The value was between ",
      "type" : "text"
    },
    {
      "code" : "min",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "max",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "between"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "min"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor11RangeResultO1Txmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "max"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor11RangeResultO1Txmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/between(min:max:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "RangeResult.between(min:max:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult\/between(min:max:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult/greaterThanMax(_:)": {
  "abstract" : [
    {
      "text" : "The value was greater than ",
      "type" : "text"
    },
    {
      "code" : "max",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "greaterThanMax"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor11RangeResultO1Txmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/greaterThanMax(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "RangeResult.greaterThanMax(_:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult\/greaterthanmax(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult/greaterThanOrEqualToMin(_:)": {
  "abstract" : [
    {
      "text" : "The value was greater than or equal to ",
      "type" : "text"
    },
    {
      "code" : "min",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "greaterThanOrEqualToMin"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor11RangeResultO1Txmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/greaterThanOrEqualToMin(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "RangeResult.greaterThanOrEqualToMin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult\/greaterthanorequaltomin(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult/lessThanMin(_:)": {
  "abstract" : [
    {
      "text" : "The value was less than ",
      "type" : "text"
    },
    {
      "code" : "min",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lessThanMin"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor11RangeResultO1Txmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/lessThanMin(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "RangeResult.lessThanMin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult\/lessthanmin(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RangeResult/lessThanOrEqualToMax(_:)": {
  "abstract" : [
    {
      "text" : "The value was less than or equal to ",
      "type" : "text"
    },
    {
      "code" : "max",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lessThanOrEqualToMax"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor11RangeResultO1Txmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RangeResult\/lessThanOrEqualToMax(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "RangeResult.lessThanOrEqualToMax(_:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/rangeresult\/lessthanorequaltomax(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}