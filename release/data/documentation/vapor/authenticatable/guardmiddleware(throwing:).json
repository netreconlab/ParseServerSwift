{
  "abstract" : [
    {
      "text" : "This middleware ensures that an ",
      "type" : "text"
    },
    {
      "code" : "Authenticatable",
      "type" : "codeVoice"
    },
    {
      "text" : " type ",
      "type" : "text"
    },
    {
      "code" : "A",
      "type" : "codeVoice"
    },
    {
      "text" : " has been authenticated",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by a previous ",
      "type" : "text"
    },
    {
      "code" : "Middleware",
      "type" : "codeVoice"
    },
    {
      "text" : " or throws an ",
      "type" : "text"
    },
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : ". The middlewares that actually perform",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "authentication will ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "not",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " throw errors if they fail to authenticate the user (except in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "some exceptional cases like malformed data). This allows the middlewares to be composed",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "together to create chains of authentication for multiple user types.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/Authenticatable"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Vapor",
    "externalID" : "s:5Vapor15AuthenticatablePAAE15guardMiddleware8throwingAA0D0_ps5Error_p_tFZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "guardMiddleware"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "throwing"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s5ErrorP",
        "text" : "Error"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5Vapor10MiddlewareP",
        "text" : "Middleware"
      }
    ],
    "modules" : [
      {
        "name" : "Vapor"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Method",
    "symbolKind" : "method",
    "title" : "guardMiddleware(throwing:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "guardMiddleware"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "throwing"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "error"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s5ErrorP",
              "text" : "Error"
            },
            {
              "kind" : "text",
              "text" : " = Abort(.unauthorized, reason: \"\\(Self.self) not authenticated.\")) -> "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/Middleware",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5Vapor10MiddlewareP",
              "text" : "Middleware"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "code" : "Error",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to throw if the type is not authed.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "throwing"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this middleware to protect routes that might not otherwise attempt to access the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "authenticated user (which always requires prior authentication).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "code" : "Authenticatable.guardMiddleware(...)",
              "type" : "codeVoice"
            },
            {
              "text" : " to create an instance.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this middleware in conjunction with other middleware such as ",
              "type" : "text"
            },
            {
              "code" : "BearerAuthenticator",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and ",
              "type" : "text"
            },
            {
              "code" : "BasicAuthenticator",
              "type" : "codeVoice"
            },
            {
              "text" : " to do the actual authentication.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Vapor",
  "type" : "topic",
  "url" : "\/documentation\/vapor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/Authenticatable": {
  "abstract" : [
    {
      "text" : "Capable of being authenticated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Authenticatable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/Authenticatable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Authenticatable"
    }
  ],
  "role" : "symbol",
  "title" : "Authenticatable",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/authenticatable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/Authenticatable/guardMiddleware(throwing:)": {
  "abstract" : [
    {
      "text" : "This middleware ensures that an ",
      "type" : "text"
    },
    {
      "code" : "Authenticatable",
      "type" : "codeVoice"
    },
    {
      "text" : " type ",
      "type" : "text"
    },
    {
      "code" : "A",
      "type" : "codeVoice"
    },
    {
      "text" : " has been authenticated",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by a previous ",
      "type" : "text"
    },
    {
      "code" : "Middleware",
      "type" : "codeVoice"
    },
    {
      "text" : " or throws an ",
      "type" : "text"
    },
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : ". The middlewares that actually perform",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "authentication will ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "not",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " throw errors if they fail to authenticate the user (except in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "some exceptional cases like malformed data). This allows the middlewares to be composed",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "together to create chains of authentication for multiple user types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "guardMiddleware"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "throwing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor10MiddlewareP",
      "text" : "Middleware"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "guardMiddleware(throwing:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/Middleware": {
  "abstract" : [
    {
      "code" : "Middleware",
      "type" : "codeVoice"
    },
    {
      "text" : " is placed between the server and your router. It is capable of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "mutating both incoming requests and outgoing responses. ",
      "type" : "text"
    },
    {
      "code" : "Middleware",
      "type" : "codeVoice"
    },
    {
      "text" : " can choose",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to pass requests on to the next ",
      "type" : "text"
    },
    {
      "code" : "Middleware",
      "type" : "codeVoice"
    },
    {
      "text" : " in a chain, or they can short circuit and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "return a custom ",
      "type" : "text"
    },
    {
      "code" : "Response",
      "type" : "codeVoice"
    },
    {
      "text" : " if desired.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Middleware"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/Middleware",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Middleware"
    }
  ],
  "role" : "symbol",
  "title" : "Middleware",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/middleware"
}
}
}