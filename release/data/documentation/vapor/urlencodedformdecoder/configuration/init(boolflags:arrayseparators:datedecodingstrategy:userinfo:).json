{
  "abstract" : [
    {
      "text" : "Creates a new ",
      "type" : "text"
    },
    {
      "code" : "URLEncodedFormCodingConfiguration",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder\/Configuration"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder\/Configuration\/init(boolFlags:arraySeparators:dateDecodingStrategy:userInfo:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5Vapor21URLEncodedFormDecoderV13ConfigurationV9boolFlags15arraySeparators20dateDecodingStrategy8userInfoAESb_SaySJGAE04DatekL0OSDys010CodingUserN3KeyVypGtcfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "boolFlags"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "arraySeparators"
      },
      {
        "kind" : "text",
        "text" : ": ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SJ",
        "text" : "Character"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "dateDecodingStrategy"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5Vapor21URLEncodedFormDecoderV13ConfigurationV20DateDecodingStrategyO",
        "text" : "DateDecodingStrategy"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "userInfo"
      },
      {
        "kind" : "text",
        "text" : ": ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s17CodingUserInfoKeyV",
        "text" : "CodingUserInfoKey"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "keyword",
        "text" : "Any"
      },
      {
        "kind" : "text",
        "text" : "])"
      }
    ],
    "modules" : [
      {
        "name" : "Vapor"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(boolFlags:arraySeparators:dateDecodingStrategy:userInfo:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "boolFlags"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : " = true, "
            },
            {
              "kind" : "externalParam",
              "text" : "arraySeparators"
            },
            {
              "kind" : "text",
              "text" : ": ["
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SJ",
              "text" : "Character"
            },
            {
              "kind" : "text",
              "text" : "] = [\",\", \"|\"], "
            },
            {
              "kind" : "externalParam",
              "text" : "dateDecodingStrategy"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder\/Configuration\/DateDecodingStrategy",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5Vapor21URLEncodedFormDecoderV13ConfigurationV20DateDecodingStrategyO",
              "text" : "DateDecodingStrategy"
            },
            {
              "kind" : "text",
              "text" : " = .secondsSince1970, "
            },
            {
              "kind" : "externalParam",
              "text" : "userInfo"
            },
            {
              "kind" : "text",
              "text" : ": ["
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s17CodingUserInfoKeyV",
              "text" : "CodingUserInfoKey"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "keyword",
              "text" : "Any"
            },
            {
              "kind" : "text",
              "text" : "] = [:])"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Set to ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " allows you to parse ",
                  "type" : "text"
                },
                {
                  "code" : "flag1&flag2",
                  "type" : "codeVoice"
                },
                {
                  "text" : " as boolean variables",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "where object with variable ",
                  "type" : "text"
                },
                {
                  "code" : "flag1",
                  "type" : "codeVoice"
                },
                {
                  "text" : " and ",
                  "type" : "text"
                },
                {
                  "code" : "flag2",
                  "type" : "codeVoice"
                },
                {
                  "text" : " would decode to ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "or ",
                  "type" : "text"
                },
                {
                  "code" : "false",
                  "type" : "codeVoice"
                },
                {
                  "text" : " depending on if the value was present or not. If this flag is set to",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "true, it will always resolve for an optional ",
                  "type" : "text"
                },
                {
                  "code" : "Bool",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "boolFlags"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Uses these characters to decode arrays. If set to ",
                  "type" : "text"
                },
                {
                  "code" : ",",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", ",
                  "type" : "text"
                },
                {
                  "code" : "arr=v1,v2",
                  "type" : "codeVoice"
                },
                {
                  "text" : " would",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "populate a key named ",
                  "type" : "text"
                },
                {
                  "code" : "arr",
                  "type" : "codeVoice"
                },
                {
                  "text" : " of type ",
                  "type" : "text"
                },
                {
                  "code" : "Array",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to be decoded as ",
                  "type" : "text"
                },
                {
                  "code" : "[\"v1\", \"v2\"]",
                  "type" : "codeVoice"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "arraySeparators"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Date format used to decode a date. Date formats are tried in the order provided",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "dateDecodingStrategy"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/vapor\/urlencodedformdecoder\/configuration\/init(boolflags:arrayseparators:datedecodingstrategy:userinfo:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Vapor",
  "type" : "topic",
  "url" : "\/documentation\/vapor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/URLEncodedFormDecoder": {
  "abstract" : [
    {
      "text" : "Decodes instances of ",
      "type" : "text"
    },
    {
      "code" : "Decodable",
      "type" : "codeVoice"
    },
    {
      "text" : " types from ",
      "type" : "text"
    },
    {
      "code" : "application\/x-www-form-urlencoded",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Data",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "URLEncodedFormDecoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "URLEncodedFormDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "URLEncodedFormDecoder",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/urlencodedformdecoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/URLEncodedFormDecoder/Configuration": {
  "abstract" : [
    {
      "text" : "Used to capture URLForm Coding Configuration used for decoding",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Configuration"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder\/Configuration",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Configuration"
    }
  ],
  "role" : "symbol",
  "title" : "URLEncodedFormDecoder.Configuration",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/urlencodedformdecoder\/configuration"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/URLEncodedFormDecoder/Configuration/DateDecodingStrategy": {
  "abstract" : [
    {
      "text" : "Supported date formats",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DateDecodingStrategy"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder\/Configuration\/DateDecodingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DateDecodingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "URLEncodedFormDecoder.Configuration.DateDecodingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/urlencodedformdecoder\/configuration\/datedecodingstrategy"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/URLEncodedFormDecoder/Configuration/init(boolFlags:arraySeparators:dateDecodingStrategy:userInfo:)": {
  "abstract" : [
    {
      "text" : "Creates a new ",
      "type" : "text"
    },
    {
      "code" : "URLEncodedFormCodingConfiguration",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "boolFlags"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "arraySeparators"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SJ",
      "text" : "Character"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "dateDecodingStrategy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Vapor21URLEncodedFormDecoderV13ConfigurationV20DateDecodingStrategyO",
      "text" : "DateDecodingStrategy"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "userInfo"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s17CodingUserInfoKeyV",
      "text" : "CodingUserInfoKey"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/URLEncodedFormDecoder\/Configuration\/init(boolFlags:arraySeparators:dateDecodingStrategy:userInfo:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(boolFlags:arraySeparators:dateDecodingStrategy:userInfo:)",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/urlencodedformdecoder\/configuration\/init(boolflags:arrayseparators:datedecodingstrategy:userinfo:)"
}
}
}