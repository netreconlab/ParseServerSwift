{
  "abstract" : [
    {
      "text" : "Create a fresh ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " containing the readable bytes of ",
      "type" : "text"
    },
    {
      "code" : "buffer",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator\/buffer(buffer:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "NIOCore",
    "externalID" : "s:7NIOCore19ByteBufferAllocatorV6bufferAdA0bC0VAF_tF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "buffer"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "buffer"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
        "text" : "ByteBuffer"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
        "text" : "ByteBuffer"
      }
    ],
    "modules" : [
      {
        "name" : "NIO",
        "relatedModules" : [
          "NIOCore"
        ]
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "buffer(buffer:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "buffer"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "buffer"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
              "text" : "ByteBuffer"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
              "text" : "ByteBuffer"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "ByteBuffer",
              "type" : "codeVoice"
            },
            {
              "text" : " containing the written bytes.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This may allocate a new ",
              "type" : "text"
            },
            {
              "code" : "ByteBuffer",
              "type" : "codeVoice"
            },
            {
              "text" : " with enough space to fit ",
              "type" : "text"
            },
            {
              "code" : "buffer",
              "type" : "codeVoice"
            },
            {
              "text" : " and potentially some extra space.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Use this method only if you deliberately want to reallocate a potentially smaller ",
                  "type" : "text"
                },
                {
                  "code" : "ByteBuffer",
                  "type" : "codeVoice"
                },
                {
                  "text" : " than the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "one you already have. Given that ",
                  "type" : "text"
                },
                {
                  "code" : "ByteBuffer",
                  "type" : "codeVoice"
                },
                {
                  "text" : " is a value type, defensive copies are not necessary. If",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "you have a ",
                  "type" : "text"
                },
                {
                  "code" : "ByteBuffer",
                  "type" : "codeVoice"
                },
                {
                  "text" : " but would like the ",
                  "type" : "text"
                },
                {
                  "code" : "readerIndex",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to start at ",
                  "type" : "text"
                },
                {
                  "code" : "0",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", consider ",
                  "type" : "text"
                },
                {
                  "code" : "readSlice",
                  "type" : "codeVoice"
                },
                {
                  "text" : " instead.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/bytebufferallocator\/buffer(buffer:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBuffer": {
  "abstract" : [
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "more bytes (octets).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBuffer"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBuffer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebuffer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBufferAllocator": {
  "abstract" : [
    {
      "text" : "The preferred allocator for ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " values. The allocation strategy is opaque but is currently libcâ€™s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "malloc",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "realloc",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "free",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBufferAllocator/buffer(buffer:)": {
  "abstract" : [
    {
      "text" : "Create a fresh ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " containing the readable bytes of ",
      "type" : "text"
    },
    {
      "code" : "buffer",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "buffer"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "buffer"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
      "text" : "ByteBuffer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
      "text" : "ByteBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator\/buffer(buffer:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "buffer(buffer:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebufferallocator\/buffer(buffer:)"
}
}
}