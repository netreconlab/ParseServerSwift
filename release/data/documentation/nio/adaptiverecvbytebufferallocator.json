{
  "abstract" : [
    {
      "code" : "RecvByteBufferAllocator",
      "type" : "codeVoice"
    },
    {
      "text" : " which will gracefully increment or decrement the buffer size on the feedback that was recorded.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:7NIOCore31AdaptiveRecvByteBufferAllocatorV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AdaptiveRecvByteBufferAllocator"
      }
    ],
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AdaptiveRecvByteBufferAllocator"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "AdaptiveRecvByteBufferAllocator"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AdaptiveRecvByteBufferAllocator"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RecvByteBufferAllocator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/init()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/init(minimum:initial:maximum:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/initial",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/maximum",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/minimum"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/buffer(allocator:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/record(actualReadBytes:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/RecvByteBufferAllocator-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/adaptiverecvbytebufferallocator"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator": {
  "abstract" : [
    {
      "code" : "RecvByteBufferAllocator",
      "type" : "codeVoice"
    },
    {
      "text" : " which will gracefully increment or decrement the buffer size on the feedback that was recorded.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AdaptiveRecvByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AdaptiveRecvByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "AdaptiveRecvByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/RecvByteBufferAllocator-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/RecvByteBufferAllocator-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RecvByteBufferAllocator Implementations",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/recvbytebufferallocator-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/buffer(allocator:)": {
  "abstract" : [
    {
      "text" : "Allocates a new ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " that will be used to read bytes from a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "buffer"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "allocator"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore19ByteBufferAllocatorV",
      "text" : "ByteBufferAllocator"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
      "text" : "ByteBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/buffer(allocator:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "buffer(allocator:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/buffer(allocator:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/init()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/init(minimum:initial:maximum:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "minimum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "initial"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "maximum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/init(minimum:initial:maximum:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(minimum:initial:maximum:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/init(minimum:initial:maximum:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/initial": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "initial"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/initial",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "initial",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/initial"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/maximum": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "maximum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/maximum",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "maximum",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/maximum"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/minimum": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "minimum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/minimum",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "minimum",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/minimum"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AdaptiveRecvByteBufferAllocator/record(actualReadBytes:)": {
  "abstract" : [
    {
      "text" : "Records the actual number of bytes that were read by the last socket call.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "record"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "actualReadBytes"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AdaptiveRecvByteBufferAllocator\/record(actualReadBytes:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "record(actualReadBytes:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/adaptiverecvbytebufferallocator\/record(actualreadbytes:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RecvByteBufferAllocator": {
  "abstract" : [
    {
      "text" : "Allocates ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : "s to be used to read bytes from a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " and records the number of the actual bytes that were used.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RecvByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RecvByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RecvByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "RecvByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/recvbytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}