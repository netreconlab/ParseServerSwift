{
  "abstract" : [
    {
      "text" : "Read ",
      "type" : "text"
    },
    {
      "code" : "byteCount",
      "type" : "codeVoice"
    },
    {
      "text" : " bytes from ",
      "type" : "text"
    },
    {
      "code" : "fileHandle",
      "type" : "codeVoice"
    },
    {
      "text" : " in ",
      "type" : "text"
    },
    {
      "code" : "NonBlockingFileIO",
      "type" : "codeVoice"
    },
    {
      "text" : "â€™s private thread pool which is separate from any ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " thread.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NonBlockingFileIO"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NonBlockingFileIO\/read(fileHandle:byteCount:allocator:eventLoop:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8NIOPosix17NonBlockingFileIOV4read10fileHandle9byteCount9allocator9eventLoop7NIOCore05EventM6FutureCyAI10ByteBufferVGAI07NIOFileH0C_SiAI0qR9AllocatorVAI0oM0_ptF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "read"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "fileHandle"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore13NIOFileHandleC",
        "text" : "NIOFileHandle"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "byteCount"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "allocator"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore19ByteBufferAllocatorV",
        "text" : "ByteBufferAllocator"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "eventLoop"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore9EventLoopP",
        "text" : "EventLoop"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
        "text" : "EventLoopFuture"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
        "text" : "ByteBuffer"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "read(fileHandle:byteCount:allocator:eventLoop:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "read"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "fileHandle"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFileHandle",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore13NIOFileHandleC",
              "text" : "NIOFileHandle"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "byteCount"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "allocator"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore19ByteBufferAllocatorV",
              "text" : "ByteBufferAllocator"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "eventLoop"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore9EventLoopP",
              "text" : "EventLoop"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
              "text" : "EventLoopFuture"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
              "text" : "ByteBuffer"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The ",
                  "type" : "text"
                },
                {
                  "code" : "NIOFileHandle",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to read.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "fileHandle"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The number of bytes to read from ",
                  "type" : "text"
                },
                {
                  "code" : "fileHandle",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "byteCount"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A ",
                  "type" : "text"
                },
                {
                  "code" : "ByteBufferAllocator",
                  "type" : "codeVoice"
                },
                {
                  "text" : " used to allocate space for the returned ",
                  "type" : "text"
                },
                {
                  "code" : "ByteBuffer",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "allocator"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The ",
                  "type" : "text"
                },
                {
                  "code" : "EventLoop",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to create the returned ",
                  "type" : "text"
                },
                {
                  "code" : "EventLoopFuture",
                  "type" : "codeVoice"
                },
                {
                  "text" : " from.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "eventLoop"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "An ",
              "type" : "text"
            },
            {
              "code" : "EventLoopFuture",
              "type" : "codeVoice"
            },
            {
              "text" : " which delivers a ",
              "type" : "text"
            },
            {
              "code" : "ByteBuffer",
              "type" : "codeVoice"
            },
            {
              "text" : " if the read was successful or a failure on error.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The returned ",
              "type" : "text"
            },
            {
              "code" : "ByteBuffer",
              "type" : "codeVoice"
            },
            {
              "text" : " will not have less than ",
              "type" : "text"
            },
            {
              "code" : "byteCount",
              "type" : "codeVoice"
            },
            {
              "text" : " bytes unless we hit end-of-file in which",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "case the ",
              "type" : "text"
            },
            {
              "code" : "ByteBuffer",
              "type" : "codeVoice"
            },
            {
              "text" : " will contain the bytes available to read.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Only use this function for small enough ",
                  "type" : "text"
                },
                {
                  "code" : "byteCount",
                  "type" : "codeVoice"
                },
                {
                  "text" : "s as it will need to allocate enough memory to hold ",
                  "type" : "text"
                },
                {
                  "code" : "byteCount",
                  "type" : "codeVoice"
                },
                {
                  "text" : " bytes.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "code" : "read(fileRegion:allocator:eventLoop:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " should be preferred as it uses ",
                  "type" : "text"
                },
                {
                  "code" : "FileRegion",
                  "type" : "codeVoice"
                },
                {
                  "text" : " object instead of",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "raw ",
                  "type" : "text"
                },
                {
                  "code" : "NIOFileHandle",
                  "type" : "codeVoice"
                },
                {
                  "text" : "s. In case you do want to use raw ",
                  "type" : "text"
                },
                {
                  "code" : "NIOFileHandle",
                  "type" : "codeVoice"
                },
                {
                  "text" : "s,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "please consider using ",
                  "type" : "text"
                },
                {
                  "code" : "read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "because it doesnâ€™t use the file descriptorâ€™s seek pointer (which may be shared with other file",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "descriptors and even across processes.)",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/nonblockingfileio\/read(filehandle:bytecount:allocator:eventloop:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBuffer": {
  "abstract" : [
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "more bytes (octets).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBuffer"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBuffer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBuffer"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBuffer",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebuffer"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteBufferAllocator": {
  "abstract" : [
    {
      "text" : "The preferred allocator for ",
      "type" : "text"
    },
    {
      "code" : "ByteBuffer",
      "type" : "codeVoice"
    },
    {
      "text" : " values. The allocation strategy is opaque but is currently libcâ€™s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "malloc",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "realloc",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "free",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteBufferAllocator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteBufferAllocator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteBufferAllocator"
    }
  ],
  "role" : "symbol",
  "title" : "ByteBufferAllocator",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytebufferallocator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoop": {
  "abstract" : [
    {
      "text" : "An EventLoop processes IO \/ tasks in an endless loop for ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s until itâ€™s closed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoop"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoop"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoop",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloop"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopFuture": {
  "abstract" : [
    {
      "text" : "Holder for a result that will be provided later.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopFuture"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopFuture"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopFuture",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopfuture"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NIOFileHandle": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "NIOFileHandle",
      "type" : "codeVoice"
    },
    {
      "text" : " is a handle to an open file.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOFileHandle"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NIOFileHandle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOFileHandle"
    }
  ],
  "role" : "symbol",
  "title" : "NIOFileHandle",
  "type" : "topic",
  "url" : "\/documentation\/nio\/niofilehandle"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NonBlockingFileIO": {
  "abstract" : [
    {
      "code" : "NonBlockingFileIO",
      "type" : "codeVoice"
    },
    {
      "text" : " is a helper that allows you to read files without blocking the calling thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NonBlockingFileIO"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NonBlockingFileIO",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NonBlockingFileIO"
    }
  ],
  "role" : "symbol",
  "title" : "NonBlockingFileIO",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nonblockingfileio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/NonBlockingFileIO/read(fileHandle:byteCount:allocator:eventLoop:)": {
  "abstract" : [
    {
      "text" : "Read ",
      "type" : "text"
    },
    {
      "code" : "byteCount",
      "type" : "codeVoice"
    },
    {
      "text" : " bytes from ",
      "type" : "text"
    },
    {
      "code" : "fileHandle",
      "type" : "codeVoice"
    },
    {
      "text" : " in ",
      "type" : "text"
    },
    {
      "code" : "NonBlockingFileIO",
      "type" : "codeVoice"
    },
    {
      "text" : "â€™s private thread pool which is separate from any ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : " thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "read"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileHandle"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore13NIOFileHandleC",
      "text" : "NIOFileHandle"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "byteCount"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "allocator"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore19ByteBufferAllocatorV",
      "text" : "ByteBufferAllocator"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "eventLoop"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore9EventLoopP",
      "text" : "EventLoop"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10ByteBufferV",
      "text" : "ByteBuffer"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/NonBlockingFileIO\/read(fileHandle:byteCount:allocator:eventLoop:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "read(fileHandle:byteCount:allocator:eventLoop:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/nonblockingfileio\/read(filehandle:bytecount:allocator:eventloop:)"
}
}
}