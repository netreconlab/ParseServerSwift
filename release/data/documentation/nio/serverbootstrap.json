{
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to bootstrap a ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when creating network servers.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8NIOPosix15ServerBootstrapC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ServerBootstrap"
      }
    ],
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ServerBootstrap"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "ServerBootstrap"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ServerBootstrap"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "    let group = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)",
            "    defer {",
            "        try! group.syncShutdownGracefully()",
            "    }",
            "    let bootstrap = ServerBootstrap(group: group)",
            "        \/\/ Specify backlog and enable SO_REUSEADDR for the server itself",
            "        .serverChannelOption(ChannelOptions.backlog, value: 256)",
            "        .serverChannelOption(ChannelOptions.socketOption(.so_reuseaddr), value: 1)",
            "",
            "        \/\/ Set the handlers that are applied to the accepted child `Channel`s.",
            "        .childChannelInitializer { channel in",
            "            \/\/ Ensure we don't read faster then we can write by adding the BackPressureHandler into the pipeline.",
            "            channel.pipeline.addHandler(BackPressureHandler()).flatMap { () in",
            "                \/\/ make sure to instantiate your `ChannelHandlers` inside of",
            "                \/\/ the closure as it will be invoked once per connection.",
            "                channel.pipeline.addHandler(MyChannelHandler())",
            "            }",
            "        }",
            "",
            "        \/\/ Enable SO_REUSEADDR for the accepted Channels",
            "        .childChannelOption(ChannelOptions.socketOption(.so_reuseaddr), value: 1)",
            "        .childChannelOption(ChannelOptions.maxMessagesPerRead, value: 16)",
            "        .childChannelOption(ChannelOptions.recvAllocator, value: AdaptiveRecvByteBufferAllocator())",
            "    let channel = try! bootstrap.bind(host: host, port: port).wait()",
            "    \/* the server will now be accepting connections *\/",
            "",
            "    try! channel.closeFuture.wait() \/\/ wait forever as we never close the Channel"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "EventLoopFuture",
              "type" : "codeVoice"
            },
            {
              "text" : " returned by ",
              "type" : "text"
            },
            {
              "code" : "bind",
              "type" : "codeVoice"
            },
            {
              "text" : " will fire with a ",
              "type" : "text"
            },
            {
              "code" : "ServerSocketChannel",
              "type" : "codeVoice"
            },
            {
              "text" : ". This is the channel that owns the listening socket.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Each time it accepts a new connection it will fire a ",
              "type" : "text"
            },
            {
              "code" : "SocketChannel",
              "type" : "codeVoice"
            },
            {
              "text" : " through the ",
              "type" : "text"
            },
            {
              "code" : "ChannelPipeline",
              "type" : "codeVoice"
            },
            {
              "text" : " via ",
              "type" : "text"
            },
            {
              "code" : "fireChannelRead",
              "type" : "codeVoice"
            },
            {
              "text" : ": as a result,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "code" : "ServerSocketChannel",
              "type" : "codeVoice"
            },
            {
              "text" : " operates on ",
              "type" : "text"
            },
            {
              "code" : "Channel",
              "type" : "codeVoice"
            },
            {
              "text" : "s as inbound messages. Outbound messages are not supported on a ",
              "type" : "text"
            },
            {
              "code" : "ServerSocketChannel",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "which means that each write attempt will fail.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Accepted ",
              "type" : "text"
            },
            {
              "code" : "SocketChannel",
              "type" : "codeVoice"
            },
            {
              "text" : "s operate on ",
              "type" : "text"
            },
            {
              "code" : "ByteBuffer",
              "type" : "codeVoice"
            },
            {
              "text" : " as inbound data, and ",
              "type" : "text"
            },
            {
              "code" : "IOData",
              "type" : "codeVoice"
            },
            {
              "text" : " as outbound data.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/init(group:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/init(group:childGroup:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/init(validatingGroup:childGroup:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(host:port:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(to:)-3rsfx",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(to:)-n6nj",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(unixDomainSocketPath:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(unixDomainSocketPath:cleanupExistingSocketFile:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bindTimeout(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/childChannelInitializer(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/childChannelOption(_:value:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/enableMPTCP(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/serverChannelInitializer(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/serverChannelOption(_:value:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/withBoundSocket(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/withBoundSocket(descriptor:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/serverbootstrap"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " is an easy way to bootstrap a ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when creating network servers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ServerBootstrap"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ServerBootstrap"
    }
  ],
  "role" : "symbol",
  "title" : "ServerBootstrap",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/bind(host:port:)": {
  "abstract" : [
    {
      "text" : "Bind the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " to ",
      "type" : "text"
    },
    {
      "code" : "host",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "port",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bind"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "host"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "port"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(host:port:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bind(host:port:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/bind(host:port:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/bind(to:)-3rsfx": {
  "abstract" : [
    {
      "text" : "Bind the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " to a VSOCK socket.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bind"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8NIOPosix12VsockAddressV",
      "text" : "VsockAddress"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(to:)-3rsfx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bind(to:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/bind(to:)-3rsfx"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/bind(to:)-n6nj": {
  "abstract" : [
    {
      "text" : "Bind the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " to ",
      "type" : "text"
    },
    {
      "code" : "address",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bind"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore13SocketAddressO",
      "text" : "SocketAddress"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(to:)-n6nj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bind(to:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/bind(to:)-n6nj"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/bind(unixDomainSocketPath:)": {
  "abstract" : [
    {
      "text" : "Bind the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " to a UNIX Domain Socket.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bind"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "unixDomainSocketPath"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(unixDomainSocketPath:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bind(unixDomainSocketPath:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/bind(unixdomainsocketpath:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/bind(unixDomainSocketPath:cleanupExistingSocketFile:)": {
  "abstract" : [
    {
      "text" : "Bind the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " to a UNIX Domain Socket.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bind"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "unixDomainSocketPath"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "cleanupExistingSocketFile"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bind(unixDomainSocketPath:cleanupExistingSocketFile:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bind(unixDomainSocketPath:cleanupExistingSocketFile:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/bind(unixdomainsocketpath:cleanupexistingsocketfile:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/bindTimeout(_:)": {
  "abstract" : [
    {
      "text" : "Specifies a timeout to apply to a bind attempt. Currently unsupported.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bindTimeout"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore10TimeAmountV",
      "text" : "TimeAmount"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/bindTimeout(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bindTimeout(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/bindtimeout(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/childChannelInitializer(_:)": {
  "abstract" : [
    {
      "text" : "Initialize the accepted ",
      "type" : "text"
    },
    {
      "code" : "SocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : "s with ",
      "type" : "text"
    },
    {
      "code" : "initializer",
      "type" : "codeVoice"
    },
    {
      "text" : ". The most common task in initializer is to add",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s to the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ". Note that if the ",
      "type" : "text"
    },
    {
      "code" : "initializer",
      "type" : "codeVoice"
    },
    {
      "text" : " fails then the error will be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "fired in the ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "parent",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "childChannelInitializer"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/childChannelInitializer(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "childChannelInitializer(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/childchannelinitializer(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/childChannelOption(_:value:)": {
  "abstract" : [
    {
      "text" : "Specifies a ",
      "type" : "text"
    },
    {
      "code" : "ChannelOption",
      "type" : "codeVoice"
    },
    {
      "text" : " to be applied to the accepted ",
      "type" : "text"
    },
    {
      "code" : "SocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "childChannelOption"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Option"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Option"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Option"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/childChannelOption(_:value:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "childChannelOption(_:value:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/childchanneloption(_:value:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/enableMPTCP(_:)": {
  "abstract" : [
    {
      "text" : "Enables multi-path TCP support.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "enableMPTCP"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/enableMPTCP(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "enableMPTCP(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/enablemptcp(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/init(group:)": {
  "abstract" : [
    {
      "text" : "Create a ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " on the ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "group",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "group"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14EventLoopGroupP",
      "text" : "EventLoopGroup"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/init(group:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(group:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/init(group:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/init(group:childGroup:)": {
  "abstract" : [
    {
      "text" : "Create a ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " on the ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "group",
      "type" : "codeVoice"
    },
    {
      "text" : " which accepts ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s on ",
      "type" : "text"
    },
    {
      "code" : "childGroup",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "group"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14EventLoopGroupP",
      "text" : "EventLoopGroup"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "childGroup"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14EventLoopGroupP",
      "text" : "EventLoopGroup"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/init(group:childGroup:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(group:childGroup:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/init(group:childgroup:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/init(validatingGroup:childGroup:)": {
  "abstract" : [
    {
      "text" : "Create a ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : " on the ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "group",
      "type" : "codeVoice"
    },
    {
      "text" : " which accepts ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : "s on ",
      "type" : "text"
    },
    {
      "code" : "childGroup",
      "type" : "codeVoice"
    },
    {
      "text" : ", validating",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that the ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : "s are compatible with ",
      "type" : "text"
    },
    {
      "code" : "ServerBootstrap",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "?("
    },
    {
      "kind" : "externalParam",
      "text" : "validatingGroup"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14EventLoopGroupP",
      "text" : "EventLoopGroup"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "childGroup"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore14EventLoopGroupP",
      "text" : "EventLoopGroup"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/init(validatingGroup:childGroup:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(validatingGroup:childGroup:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/init(validatinggroup:childgroup:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/serverChannelInitializer(_:)": {
  "abstract" : [
    {
      "text" : "Initialize the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " with ",
      "type" : "text"
    },
    {
      "code" : "initializer",
      "type" : "codeVoice"
    },
    {
      "text" : ". The most common task in initializer is to add",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s to the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "serverChannelInitializer"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/serverChannelInitializer(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "serverChannelInitializer(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/serverchannelinitializer(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/serverChannelOption(_:value:)": {
  "abstract" : [
    {
      "text" : "Specifies a ",
      "type" : "text"
    },
    {
      "code" : "ChannelOption",
      "type" : "codeVoice"
    },
    {
      "text" : " to be applied to the ",
      "type" : "text"
    },
    {
      "code" : "ServerSocketChannel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "serverChannelOption"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Option"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Option"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Option"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/serverChannelOption(_:value:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "serverChannelOption(_:value:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/serverchanneloption(_:value:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/withBoundSocket(_:)": {
  "abstract" : [
    {
      "text" : "Use the existing bound socket file descriptor.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withBoundSocket"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore12NIOBSDSocketO",
      "text" : "NIOBSDSocket"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore12NIOBSDSocketO6Handlea",
      "text" : "Handle"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/withBoundSocket(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withBoundSocket(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/withboundsocket(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ServerBootstrap/withBoundSocket(descriptor:)": {
  "abstract" : [
    {
      "text" : "Use the existing bound socket file descriptor.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withBoundSocket"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "descriptor"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4CInta",
      "text" : "CInt"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore7ChannelP",
      "text" : "Channel"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ServerBootstrap\/withBoundSocket(descriptor:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withBoundSocket(descriptor:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/serverbootstrap\/withboundsocket(descriptor:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}