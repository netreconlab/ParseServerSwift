{
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be dynamically removed from a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " whilst",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is operating normally.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is required to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " (using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ") as soon as possible.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:7NIOCore23RemovableChannelHandlerP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "RemovableChannelHandler"
      }
    ],
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "RemovableChannelHandler"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "RemovableChannelHandler"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "RemovableChannelHandler"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore14ChannelHandlerP",
              "text" : "ChannelHandler"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "When a ",
                  "type" : "text"
                },
                {
                  "code" : "Channel",
                  "type" : "codeVoice"
                },
                {
                  "text" : " gets torn down, every ",
                  "type" : "text"
                },
                {
                  "code" : "ChannelHandler",
                  "type" : "codeVoice"
                },
                {
                  "text" : " in the ",
                  "type" : "text"
                },
                {
                  "code" : "Channel",
                  "type" : "codeVoice"
                },
                {
                  "text" : "â€™s ",
                  "type" : "text"
                },
                {
                  "code" : "ChannelPipeline",
                  "type" : "codeVoice"
                },
                {
                  "text" : " will be",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "removed from the ",
                  "type" : "text"
                },
                {
                  "code" : "ChannelPipeline",
                  "type" : "codeVoice"
                },
                {
                  "text" : ". Those removals however happen synchronously and are not going through",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "the methods of this protocol.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AcceptBackoffHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/BackPressureHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPRequestEncoder",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPResponseEncoder",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IdleStateHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/NIOHTTP1ProxyConnectHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLClientHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLServerHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/NIOWritePCAPHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/SOCKSClientHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler\/removeHandler(context:removalToken:)-2jaoc"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/removablechannelhandler"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/AcceptBackoffHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that implements a backoff for a ",
      "type" : "text"
    },
    {
      "code" : "ServerChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " when accept produces an ",
      "type" : "text"
    },
    {
      "code" : "IOError",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "These errors are often recoverable by reducing the rate at which we call accept.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AcceptBackoffHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/AcceptBackoffHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AcceptBackoffHandler"
    }
  ],
  "role" : "symbol",
  "title" : "AcceptBackoffHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/acceptbackoffhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/BackPressureHandler": {
  "abstract" : [
    {
      "text" : "ChannelHandler implementation which enforces back-pressure by stopping to read from the remote peer when it cannot write back fast enough.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "It will start reading again once pending data was written.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BackPressureHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/BackPressureHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BackPressureHandler"
    }
  ],
  "role" : "symbol",
  "title" : "BackPressureHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/backpressurehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ByteToMessageHandler": {
  "abstract" : [
    {
      "text" : "A handler which turns a given ",
      "type" : "text"
    },
    {
      "code" : "ByteToMessageDecoder",
      "type" : "codeVoice"
    },
    {
      "text" : " into a ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can then be added to a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Decoder",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ByteToMessageDecoder",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ByteToMessageHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ByteToMessageHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ByteToMessageHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ByteToMessageHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/bytetomessagehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelHandler": {
  "abstract" : [
    {
      "text" : "Base protocol for handlers that handle I\/O events or intercept an I\/O operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/IdleStateHandler": {
  "abstract" : [
    {
      "text" : "Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IdleStateHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/IdleStateHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IdleStateHandler"
    }
  ],
  "role" : "symbol",
  "title" : "IdleStateHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/idlestatehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RemovableChannelHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be dynamically removed from a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " whilst",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is operating normally.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is required to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " (using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ") as soon as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "RemovableChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/removablechannelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RemovableChannelHandler/removeHandler(context:removalToken:)-2jaoc": {
  "abstract" : [
    {
      "text" : "Ask the receiving ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " as soon as possible.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The receiving ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " may elect to remove itself sometime after this method call, rather than",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "immediately, but if it does so it must take the necessary precautions to handle events arriving between the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "invocation of this method and the call to ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " that triggers the actual",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "removal.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 2,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeHandler"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "removalToken"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC12RemovalTokenV",
      "text" : "RemovalToken"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler\/removeHandler(context:removalToken:)-2jaoc",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "removeHandler(context:removalToken:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/removablechannelhandler\/removehandler(context:removaltoken:)-2jaoc"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/NIOHTTP1ProxyConnectHandler": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTP1ProxyConnectHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/NIOHTTP1ProxyConnectHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTP1ProxyConnectHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTP1ProxyConnectHandler",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/niohttp1proxyconnecthandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOExtras/NIOWritePCAPHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can write a ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Pcap",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " containing the send\/received",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "data as synthesized TCP packet captures.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOWritePCAPHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOExtras\/NIOWritePCAPHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOWritePCAPHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOWritePCAPHandler",
  "type" : "topic",
  "url" : "\/documentation\/nioextras\/niowritepcaphandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPRequestEncoder": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelOutboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can serialize HTTP requests.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPRequestEncoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPRequestEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPRequestEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPRequestEncoder",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httprequestencoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPResponseEncoder": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelOutboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can serialize HTTP responses.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPResponseEncoder"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPResponseEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPResponseEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPResponseEncoder",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpresponseencoder"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that handles HTTP pipelining by buffering inbound data until a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "response has been sent.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPServerPipelineHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPServerPipelineHandler"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerPipelineHandler",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerProtocolErrorHandler": {
  "abstract" : [
    {
      "text" : "A simple channel handler that catches errors emitted by parsing HTTP requests",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and sends 400 Bad Request responses.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPServerProtocolErrorHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPServerProtocolErrorHandler"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerProtocolErrorHandler",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverprotocolerrorhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerUpgradeHandler": {
  "abstract" : [
    {
      "text" : "A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Removes itself from the channel pipeline after the first inbound request on the connection, regardless of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whether the upgrade succeeded or not.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPServerUpgradeHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPServerUpgradeHandler"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerUpgradeHandler",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverupgradehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that handles HTTP chunked ",
      "type" : "text"
    },
    {
      "code" : "HTTPClientResponsePart",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "messages by aggregating individual message chunks into a single",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "NIOHTTPClientResponseFull",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientResponseAggregator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientResponseAggregator"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPClientResponseAggregator",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpclientresponseaggregator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler": {
  "abstract" : [
    {
      "text" : "A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the a protocol. It may add headers for a set of protocols in preference order.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientUpgradeHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientUpgradeHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPClientUpgradeHandler",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpclientupgradehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPRequestHeadersValidator": {
  "abstract" : [
    {
      "text" : "A ChannelHandler to validate that outbound request headers are spec-compliant.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestHeadersValidator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestHeadersValidator"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPRequestHeadersValidator",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttprequestheadersvalidator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator": {
  "abstract" : [
    {
      "text" : "A ChannelHandler to validate that outbound response headers are spec-compliant.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPResponseHeadersValidator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPResponseHeadersValidator"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPResponseHeadersValidator",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpresponseheadersvalidator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that handles HTTP chunked ",
      "type" : "text"
    },
    {
      "code" : "HTTPServerRequestPart",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "messages by aggregating individual message chunks into a single",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "NIOHTTPServerRequestFull",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPServerRequestAggregator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPServerRequestAggregator"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPServerRequestAggregator",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpserverrequestaggregator"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/HTTPResponseCompressor": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is a duplex channel handler that handles automatic streaming compression of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "HTTP responses. It respects the clientâ€™s Accept-Encoding preferences, including q-values if present,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and ensures that clients are served the compression algorithm that works best for them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPResponseCompressor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPResponseCompressor"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPResponseCompressor",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/httpresponsecompressor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is an outbound channel handler that handles automatic streaming compression of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "HTTP requests.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestCompressor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestCompressor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPRequestCompressor",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor": {
  "abstract" : [
    {
      "text" : "Channel hander to decompress incoming HTTP data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestDecompressor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestDecompressor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPRequestDecompressor",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestdecompressor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPResponseDecompressor": {
  "abstract" : [
    {
      "text" : "Duplex channel handler which will accept deflate and gzip encoded responses and decompress them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPResponseDecompressor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPResponseDecompressor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPResponseDecompressor",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttpresponsedecompressor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSOCKS/ClientMessage": {
  "abstract" : [
    {
      "text" : "Sent by the client and received by the server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClientMessage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/ClientMessage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClientMessage"
    }
  ],
  "role" : "symbol",
  "title" : "ClientMessage",
  "type" : "topic",
  "url" : "\/documentation\/niosocks\/clientmessage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSOCKS/SOCKSClientHandler": {
  "abstract" : [
    {
      "text" : "Connects to a SOCKS server to establish a proxied connection",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to a host. This handler should be inserted at the beginning of a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "channelâ€™s pipeline. Note that SOCKS only supports fully-qualified",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "domain names and IPv4 or IPv6 sockets, and not UNIX sockets.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SOCKSClientHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/SOCKSClientHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SOCKSClientHandler"
    }
  ],
  "role" : "symbol",
  "title" : "SOCKSClientHandler",
  "type" : "topic",
  "url" : "\/documentation\/niosocks\/socksclienthandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSOCKS/SOCKSServerHandshakeHandler": {
  "abstract" : [
    {
      "text" : "Add this handshake handler to the front of your channel, closest to the network.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The handler will receive bytes from the network and run them through a state machine",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and parser to enforce SOCKSv5 protocol correctness. Inbound bytes will by parsed into",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/ClientMessage",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " for downstream consumption. Send ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/ServerMessage",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SOCKSServerHandshakeHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/SOCKSServerHandshakeHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SOCKSServerHandshakeHandler"
    }
  ],
  "role" : "symbol",
  "title" : "SOCKSServerHandshakeHandler",
  "type" : "topic",
  "url" : "\/documentation\/niosocks\/socksserverhandshakehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSOCKS/ServerMessage": {
  "abstract" : [
    {
      "text" : "Sent by the server and received by the client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ServerMessage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSOCKS\/ServerMessage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ServerMessage"
    }
  ],
  "role" : "symbol",
  "title" : "ServerMessage",
  "type" : "topic",
  "url" : "\/documentation\/niosocks\/servermessage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSSL/NIOSSLClientHandler": {
  "abstract" : [
    {
      "text" : "A channel handler that wraps a channel in TLS using NIOSSL.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This handler can be used in channels that are acting as the client",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in the TLS dialog. For server connections, use the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLServerHandler",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSSLClientHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLClientHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSSLClientHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSSLClientHandler",
  "type" : "topic",
  "url" : "\/documentation\/niossl\/niosslclienthandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSSL/NIOSSLHandler": {
  "abstract" : [
    {
      "text" : "The base class for all NIOSSL handlers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSSLHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSSLHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSSLHandler",
  "type" : "topic",
  "url" : "\/documentation\/niossl\/niosslhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOSSL/NIOSSLServerHandler": {
  "abstract" : [
    {
      "text" : "A channel handler that wraps a channel in TLS using NIOSSL. This",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "handler can be used in channels that are acting as the server in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the TLS dialog. For client connections, use the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLClientHandler",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOSSLServerHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOSSL\/NIOSSLServerHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOSSLServerHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOSSLServerHandler",
  "type" : "topic",
  "url" : "\/documentation\/niossl\/niosslserverhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOTLS/ApplicationProtocolNegotiationHandler": {
  "abstract" : [
    {
      "text" : "A helper ",
      "type" : "text"
    },
    {
      "code" : "ChannelInboundHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that makes it easy to swap channel pipelines",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "based on the result of an ALPN negotiation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ApplicationProtocolNegotiationHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ApplicationProtocolNegotiationHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ApplicationProtocolNegotiationHandler",
  "type" : "topic",
  "url" : "\/documentation\/niotls\/applicationprotocolnegotiationhandler"
},
"https://en.wikipedia.org/wiki/Pcap": {
  "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Pcap",
  "title" : ".pcap file",
  "titleInlineContent" : [
    {
      "code" : ".pcap",
      "type" : "codeVoice"
    },
    {
      "text" : " file",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/en.wikipedia.org\/wiki\/Pcap"
}
}
}