{
  "abstract" : [
    {
      "text" : "When the current ",
      "type" : "text"
    },
    {
      "code" : "EventLoopFuture<Value>",
      "type" : "codeVoice"
    },
    {
      "text" : " is fulfilled, run the provided callback,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "which will provide a new ",
      "type" : "text"
    },
    {
      "code" : "EventLoopFuture",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture\/flatMap(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "NIOCore",
    "externalID" : "s:7NIOCore15EventLoopFutureC7flatMapyACyqd__GAExclF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "flatMap"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "NewValue"
      },
      {
        "kind" : "text",
        "text" : ">(("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Value"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
        "text" : "EventLoopFuture"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "NewValue"
      },
      {
        "kind" : "text",
        "text" : ">) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
        "text" : "EventLoopFuture"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "NewValue"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "NIO",
        "relatedModules" : [
          "NIOCore"
        ]
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "flatMap(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@preconcurrency"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "flatMap"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "NewValue"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "callback"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "keyword",
              "text" : "@escaping"
            },
            {
              "kind" : "text",
              "text" : " ("
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
              "text" : "EventLoopFuture"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "NewValue"
            },
            {
              "kind" : "text",
              "text" : ">) -> "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
              "text" : "EventLoopFuture"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "NewValue"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Function that will receive the value of this ",
                  "type" : "text"
                },
                {
                  "code" : "EventLoopFuture",
                  "type" : "codeVoice"
                },
                {
                  "text" : " and return",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "a new ",
                  "type" : "text"
                },
                {
                  "code" : "EventLoopFuture",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "callback"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A future that will receive the eventual value.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This allows you to dynamically dispatch new asynchronous tasks as phases in a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "longer series of processing steps. Note that you can use the results of the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "current ",
              "type" : "text"
            },
            {
              "code" : "EventLoopFuture<Value>",
              "type" : "codeVoice"
            },
            {
              "text" : " when determining how to dispatch the next operation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This works well when you have APIs that already know how to return ",
              "type" : "text"
            },
            {
              "code" : "EventLoopFuture",
              "type" : "codeVoice"
            },
            {
              "text" : "s.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "You can do something with the result of one and just return the next future:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let d1 = networkRequest(args).future()",
            "let d2 = d1.flatMap { t -> EventLoopFuture<NewValue> in",
            "    . . . something with t . . .",
            "    return netWorkRequest(args)",
            "}",
            "d2.whenSuccess { u in",
            "    NSLog(\"Result of second request: \\(u)\")",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Note: In a sense, the ",
              "type" : "text"
            },
            {
              "code" : "EventLoopFuture<NewValue>",
              "type" : "codeVoice"
            },
            {
              "text" : " is returned before itâ€™s created.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/eventloopfuture\/flatmap(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopFuture": {
  "abstract" : [
    {
      "text" : "Holder for a result that will be provided later.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventLoopFuture"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventLoopFuture"
    }
  ],
  "role" : "symbol",
  "title" : "EventLoopFuture",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopfuture"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/EventLoopFuture/flatMap(_:)": {
  "abstract" : [
    {
      "text" : "When the current ",
      "type" : "text"
    },
    {
      "code" : "EventLoopFuture<Value>",
      "type" : "codeVoice"
    },
    {
      "text" : " is fulfilled, run the provided callback,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "which will provide a new ",
      "type" : "text"
    },
    {
      "code" : "EventLoopFuture",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "flatMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "NewValue"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NewValue"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore15EventLoopFutureC",
      "text" : "EventLoopFuture"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NewValue"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/EventLoopFuture\/flatMap(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "flatMap(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/eventloopfuture\/flatmap(_:)"
}
}
}