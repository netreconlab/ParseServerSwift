{
  "abstract" : [
    {
      "text" : "Creates a ",
      "type" : "text"
    },
    {
      "code" : "MultiThreadedEventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " instance which uses ",
      "type" : "text"
    },
    {
      "code" : "numberOfThreads",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MultiThreadedEventLoopGroup"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8NIOPosix27MultiThreadedEventLoopGroupC15numberOfThreadsACSi_tcfc",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "convenience"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "numberOfThreads"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "NIO"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(numberOfThreads:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "convenience"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "numberOfThreads"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            },
            {
              "kind" : "text",
              "text" : ")"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "arguments:",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "numberOfThreads: The number of ",
                              "type" : "text"
                            },
                            {
                              "code" : "Threads",
                              "type" : "codeVoice"
                            },
                            {
                              "text" : " to use.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Donâ€™t forget to call ",
                  "type" : "text"
                },
                {
                  "code" : "shutdownGracefully",
                  "type" : "codeVoice"
                },
                {
                  "text" : " or ",
                  "type" : "text"
                },
                {
                  "code" : "syncShutdownGracefully",
                  "type" : "codeVoice"
                },
                {
                  "text" : " when you no longer need this",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "EventLoopGroup",
                  "type" : "codeVoice"
                },
                {
                  "text" : ". If you forget to shut the ",
                  "type" : "text"
                },
                {
                  "code" : "EventLoopGroup",
                  "type" : "codeVoice"
                },
                {
                  "text" : " down you will leak ",
                  "type" : "text"
                },
                {
                  "code" : "numberOfThreads",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "(kernel) threads which are costly resources. This is especially important in unit tests where one",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "MultiThreadedEventLoopGroup",
                  "type" : "codeVoice"
                },
                {
                  "text" : " is started per test case.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nio\/multithreadedeventloopgroup\/init(numberofthreads:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIO",
  "type" : "topic",
  "url" : "\/documentation\/nio"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MultiThreadedEventLoopGroup": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "EventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " which will create multiple ",
      "type" : "text"
    },
    {
      "code" : "EventLoop",
      "type" : "codeVoice"
    },
    {
      "text" : "s, each tied to its own ",
      "type" : "text"
    },
    {
      "code" : "NIOThread",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MultiThreadedEventLoopGroup"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MultiThreadedEventLoopGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MultiThreadedEventLoopGroup"
    }
  ],
  "role" : "symbol",
  "title" : "MultiThreadedEventLoopGroup",
  "type" : "topic",
  "url" : "\/documentation\/nio\/multithreadedeventloopgroup"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/MultiThreadedEventLoopGroup/init(numberOfThreads:)": {
  "abstract" : [
    {
      "text" : "Creates a ",
      "type" : "text"
    },
    {
      "code" : "MultiThreadedEventLoopGroup",
      "type" : "codeVoice"
    },
    {
      "text" : " instance which uses ",
      "type" : "text"
    },
    {
      "code" : "numberOfThreads",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "numberOfThreads"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(numberOfThreads:)",
  "type" : "topic",
  "url" : "\/documentation\/nio\/multithreadedeventloopgroup\/init(numberofthreads:)"
}
}
}