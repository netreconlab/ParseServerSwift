{
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that handles HTTP pipelining by buffering inbound data until a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "response has been sent.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8NIOHTTP125HTTPServerPipelineHandlerC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "HTTPServerPipelineHandler"
      }
    ],
    "modules" : [
      {
        "name" : "NIOHTTP1"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "HTTPServerPipelineHandler"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "HTTPServerPipelineHandler"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "HTTPServerPipelineHandler"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This handler ensures that HTTP server pipelines only process one request at a time.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This is the safest way for pipelining-unaware code to operate, as it ensures that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "mutation of any shared server state is not parallelised, and that responses are always",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "sent for each request in turn. In almost all cases this is the behaviour that a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "pipeline will want. This is achieved without doing too much buffering by preventing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "code" : "Channel",
              "type" : "codeVoice"
            },
            {
              "text" : " from reading from the socket until a complete response is processed,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "ensuring that a malicious client is not capable of overwhelming a server by shoving",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "an enormous amount of data down the ",
              "type" : "text"
            },
            {
              "code" : "Channel",
              "type" : "codeVoice"
            },
            {
              "text" : " while a server is processing a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "slow response.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "more details on safely handling HTTP pipelining.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In addition to handling the request buffering, this ",
              "type" : "text"
            },
            {
              "code" : "ChannelHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " is aware of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "TCP half-close. While there are very few HTTP clients that are capable of TCP",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "half-close, clients that are not HTTP specific (e.g. ",
              "type" : "text"
            },
            {
              "code" : "netcat",
              "type" : "codeVoice"
            },
            {
              "text" : ") may trigger a TCP",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "half-close. Having this ",
              "type" : "text"
            },
            {
              "code" : "ChannelHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " be aware of TCP half-close makes it easier",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to build HTTP servers that are resilient to this kind of behaviour.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The TCP half-close handling is done by buffering the half-close notification along",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "with the HTTP request parts. The half-close notification will be delivered in order",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "with the rest of the reads. If the half-close occurs either before a request is received",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or during a request body upload, it will be delivered immediately. If a half-close is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "received immediately after ",
              "type" : "text"
            },
            {
              "code" : "HTTPServerRequestPart.end",
              "type" : "codeVoice"
            },
            {
              "text" : ", it will also be passed along",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "immediately, allowing this signal to be seen by the HTTP server as early as possible.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInboundHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelInactive(context:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelRead(context:data:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/close(context:mode:promise:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/errorCaught(context:error:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/handlerRemoved(context:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/read(context:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/userInboundEventTriggered(context:event:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/write(context:data:promise:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundIn",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundOut",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundIn",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundOut"
      ],
      "title" : "Type Aliases"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelHandler-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelInboundHandler-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelOutboundHandler-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/RemovableChannelHandler-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/niohttp1\/httpserverpipelinehandler"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelHandler": {
  "abstract" : [
    {
      "text" : "Base protocol for handlers that handle I\/O events or intercept an I\/O operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelInboundHandler": {
  "abstract" : [
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " which handles inbound I\/O events for a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelInboundHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelInboundHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelInboundHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelInboundHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelinboundhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelOutboundHandler": {
  "abstract" : [
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " which handles outbound I\/O events or intercept an outbound I\/O operation for a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelOutboundHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channeloutboundhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RemovableChannelHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be dynamically removed from a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " whilst",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is operating normally.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is required to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " (using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ") as soon as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "RemovableChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/removablechannelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIOHTTP1",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that handles HTTP pipelining by buffering inbound data until a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "response has been sent.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HTTPServerPipelineHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HTTPServerPipelineHandler"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerPipelineHandler",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelHandler-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelHandler-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ChannelHandler Implementations",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/channelhandler-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelInboundHandler-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelInboundHandler-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ChannelInboundHandler Implementations",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/channelinboundhandler-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelOutboundHandler-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelOutboundHandler-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ChannelOutboundHandler Implementations",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/channeloutboundhandler-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/InboundIn": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "InboundIn"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundIn",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "InboundIn"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerPipelineHandler.InboundIn",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/inboundin"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/InboundOut": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "InboundOut"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundOut",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "InboundOut"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerPipelineHandler.InboundOut",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/inboundout"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/OutboundIn": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OutboundIn"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundIn",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OutboundIn"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerPipelineHandler.OutboundIn",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/outboundin"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/OutboundOut": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OutboundOut"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundOut",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OutboundOut"
    }
  ],
  "role" : "symbol",
  "title" : "HTTPServerPipelineHandler.OutboundOut",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/outboundout"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/RemovableChannelHandler-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/RemovableChannelHandler-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RemovableChannelHandler Implementations",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/removablechannelhandler-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/channelInactive(context:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "channelInactive"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelInactive(context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "channelInactive(context:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/channelinactive(context:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/channelRead(context:data:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "channelRead"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "data"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore6NIOAnyV",
      "text" : "NIOAny"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelRead(context:data:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "channelRead(context:data:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/channelread(context:data:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/close(context:mode:promise:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "close"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "mode"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore9CloseModeO",
      "text" : "CloseMode"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "promise"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore16EventLoopPromiseV",
      "text" : "EventLoopPromise"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/close(context:mode:promise:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "close(context:mode:promise:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/close(context:mode:promise:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/errorCaught(context:error:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "errorCaught"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "error"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/errorCaught(context:error:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "errorCaught(context:error:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/errorcaught(context:error:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/handlerRemoved(context:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "handlerRemoved"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/handlerRemoved(context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "handlerRemoved(context:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/handlerremoved(context:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/init()"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/read(context:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "read"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/read(context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "read(context:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/read(context:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/userInboundEventTriggered(context:event:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "userInboundEventTriggered"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "event"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/userInboundEventTriggered(context:event:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "userInboundEventTriggered(context:event:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/userinboundeventtriggered(context:event:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/HTTPServerPipelineHandler/write(context:data:promise:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "write"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "data"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore6NIOAnyV",
      "text" : "NIOAny"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "promise"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore16EventLoopPromiseV",
      "text" : "EventLoopPromise"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/write(context:data:promise:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "write(context:data:promise:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/httpserverpipelinehandler\/write(context:data:promise:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
},
"https://tools.ietf.org/html/rfc7230#section-6.3.2": {
  "identifier" : "https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2",
  "title" : "RFC 7320 Section 6.3.2",
  "titleInlineContent" : [
    {
      "text" : "RFC 7320 Section 6.3.2",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2"
}
}
}