{
  "abstract" : [
    {
      "text" : "Create a ",
      "type" : "text"
    },
    {
      "code" : "HTTPClientUpgradeHandler",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8NIOHTTP127NIOHTTPClientUpgradeHandlerC9upgraders12httpHandlers017upgradeCompletionD0ACSayAA0B16ProtocolUpgrader_pG_Say7NIOCore016RemovableChannelD0_pGyAI0nD7ContextCctcfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "upgraders"
      },
      {
        "kind" : "text",
        "text" : ": ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP",
        "text" : "NIOHTTPClientProtocolUpgrader"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "httpHandlers"
      },
      {
        "kind" : "text",
        "text" : ": ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore23RemovableChannelHandlerP",
        "text" : "RemovableChannelHandler"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "upgradeCompletionHandler"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
        "text" : "ChannelHandlerContext"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s4Voida",
        "text" : "Void"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "NIOHTTP1"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(upgraders:httpHandlers:upgradeCompletionHandler:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "convenience"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "upgraders"
            },
            {
              "kind" : "text",
              "text" : ": ["
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP",
              "text" : "NIOHTTPClientProtocolUpgrader"
            },
            {
              "kind" : "text",
              "text" : "], "
            },
            {
              "kind" : "externalParam",
              "text" : "httpHandlers"
            },
            {
              "kind" : "text",
              "text" : ": ["
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore23RemovableChannelHandlerP",
              "text" : "RemovableChannelHandler"
            },
            {
              "kind" : "text",
              "text" : "], "
            },
            {
              "kind" : "externalParam",
              "text" : "upgradeCompletionHandler"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@escaping"
            },
            {
              "kind" : "text",
              "text" : " ("
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandlerContext",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
              "text" : "ChannelHandlerContext"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s4Voida",
              "text" : "Void"
            },
            {
              "kind" : "text",
              "text" : ")"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "All ",
                  "type" : "text"
                },
                {
                  "code" : "HTTPClientProtocolUpgrader",
                  "type" : "codeVoice"
                },
                {
                  "text" : " objects that will add their upgrade request",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "headers and handle the upgrade if there is a response for their protocol. They should be placed in",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "order of the preference for the upgrade.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "upgraders"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "All ",
                  "type" : "text"
                },
                {
                  "code" : "RemovableChannelHandler",
                  "type" : "codeVoice"
                },
                {
                  "text" : " objects which will be removed from the pipeline",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "once the upgrade response is sent. This is used to ensure that the pipeline will be in a clean state",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "after the upgrade. It should include any handlers that are directly related to handling HTTP.",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "At the very least this should include the ",
                  "type" : "text"
                },
                {
                  "code" : "HTTPEncoder",
                  "type" : "codeVoice"
                },
                {
                  "text" : " and ",
                  "type" : "text"
                },
                {
                  "code" : "HTTPDecoder",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", but should also include",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "any other handler that cannot tolerate receiving non-HTTP data.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "httpHandlers"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that will be fired when HTTP upgrade is complete.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "upgradeCompletionHandler"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelHandlerContext": {
  "abstract" : [
    {
      "text" : "Every ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " has – when added to a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " – a corresponding ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext",
      "type" : "codeVoice"
    },
    {
      "text" : " which is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the way ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s can interact with other ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s in the pipeline.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHandlerContext"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandlerContext",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHandlerContext"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHandlerContext",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelhandlercontext"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RemovableChannelHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be dynamically removed from a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " whilst",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is operating normally.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is required to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " (using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ") as soon as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "RemovableChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/removablechannelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIOHTTP1",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader": {
  "abstract" : [
    {
      "text" : "An object that implements ",
      "type" : "text"
    },
    {
      "code" : "NIOHTTPClientProtocolUpgrader",
      "type" : "codeVoice"
    },
    {
      "text" : " knows how to handle HTTP upgrade to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a protocol on a client-side channel.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "It has the option of denying this upgrade based upon the server response.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientProtocolUpgrader"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientProtocolUpgrader"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPClientProtocolUpgrader",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpclientprotocolupgrader"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler": {
  "abstract" : [
    {
      "text" : "A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the a protocol. It may add headers for a set of protocols in preference order.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientUpgradeHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPClientUpgradeHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPClientUpgradeHandler",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpclientupgradehandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/init(upgraders:httpHandlers:upgradeCompletionHandler:)": {
  "abstract" : [
    {
      "text" : "Create a ",
      "type" : "text"
    },
    {
      "code" : "HTTPClientUpgradeHandler",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "upgraders"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP",
      "text" : "NIOHTTPClientProtocolUpgrader"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "httpHandlers"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore23RemovableChannelHandlerP",
      "text" : "RemovableChannelHandler"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "upgradeCompletionHandler"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(upgraders:httpHandlers:upgradeCompletionHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"
}
}
}