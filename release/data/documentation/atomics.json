{
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "Atomics",
    "modules" : [
      {
        "name" : "Atomics"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "Atomics"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/ManagedAtomic",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/ManagedAtomicLazyReference"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicInteger",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicIntegerStorage",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalWrappable",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicReference",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicStorage",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicValue"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicLoadOrdering",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalReferenceStorage",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicRawRepresentableStorage",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicReferenceStorage",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicStoreOrdering",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicUpdateOrdering",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomic",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/atomicMemoryFence(ordering:)"
      ],
      "title" : "Functions"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/DoubleWord"
      ],
      "title" : "Type Aliases"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/atomics"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Atomics",
  "type" : "topic",
  "url" : "\/documentation\/atomics"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicInteger": {
  "abstract" : [
    {
      "text" : "A type that supports atomic integer operations through a separate",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "atomic storage representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicInteger"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicInteger"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicInteger",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicinteger"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicIntegerStorage": {
  "abstract" : [
    {
      "text" : "The storage representation for an atomic integer value, providing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "pointer-based atomic operations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicIntegerStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicIntegerStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicIntegerStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicIntegerStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicintegerstorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicLoadOrdering": {
  "abstract" : [
    {
      "text" : "Specifies the memory ordering semantics of an atomic load operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicLoadOrdering"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicLoadOrdering",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicLoadOrdering"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicLoadOrdering",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicloadordering"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalRawRepresentableStorage": {
  "abstract" : [
    {
      "text" : "A default atomic storage representation for a ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " type",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whose ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to ",
      "type" : "text"
    },
    {
      "code" : "AtomicOptionalWrappable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalRawRepresentableStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalRawRepresentableStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalRawRepresentableStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalrawrepresentablestorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalReferenceStorage": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalReferenceStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalReferenceStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalReferenceStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalReferenceStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalreferencestorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicOptionalWrappable": {
  "abstract" : [
    {
      "text" : "An atomic value that also supports atomic operations when wrapped",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in an ",
      "type" : "text"
    },
    {
      "code" : "Optional",
      "type" : "codeVoice"
    },
    {
      "text" : ". Atomic optional wrappable types come with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "standalone atomic representation for their optional-wrapped",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "variants.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalWrappable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicOptionalWrappable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicOptionalWrappable"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicOptionalWrappable",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicoptionalwrappable"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicRawRepresentableStorage": {
  "abstract" : [
    {
      "text" : "The default atomic storage representation for an atomic ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "type whose ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to ",
      "type" : "text"
    },
    {
      "code" : "AtomicValue",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicRawRepresentableStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicRawRepresentableStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicRawRepresentableStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicRawRepresentableStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicrawrepresentablestorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicReference": {
  "abstract" : [
    {
      "text" : "A class type that supports atomic strong references.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicReference"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicReference",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicReference"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicReference",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicreference"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicReferenceStorage": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicReferenceStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicReferenceStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicReferenceStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicReferenceStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicreferencestorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicStorage": {
  "abstract" : [
    {
      "text" : "The storage representation for an atomic value, providing pointer-based",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "atomic operations. This is a low-level implementation detail of atomic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "types; instead of directly handling conforming types, it is usually better",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to use the ",
      "type" : "text"
    },
    {
      "code" : "UnsafeAtomic",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "ManagedAtomic",
      "type" : "codeVoice"
    },
    {
      "text" : " generics – these provide more",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "convenient and safer interfaces while also ensuring that the storage is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "correctly constructed and destroyed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicStorage"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicStorage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicStorage"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicStorage",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicstorage"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicStoreOrdering": {
  "abstract" : [
    {
      "text" : "Specifies the memory ordering semantics of an atomic store operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicStoreOrdering"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicStoreOrdering",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicStoreOrdering"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicStoreOrdering",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicstoreordering"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicUpdateOrdering": {
  "abstract" : [
    {
      "text" : "Specifies the memory ordering semantics of an atomic read-modify-write",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicUpdateOrdering"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicUpdateOrdering",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicUpdateOrdering"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicUpdateOrdering",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicupdateordering"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/AtomicValue": {
  "abstract" : [
    {
      "text" : "A type that supports atomic operations through a separate atomic storage",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AtomicValue"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/AtomicValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AtomicValue"
    }
  ],
  "role" : "symbol",
  "title" : "AtomicValue",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicvalue"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/DoubleWord": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DoubleWord"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/DoubleWord",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DoubleWord"
    }
  ],
  "role" : "symbol",
  "title" : "DoubleWord",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/doubleword"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/ManagedAtomic": {
  "abstract" : [
    {
      "text" : "A reference type holding an atomic value, with automatic memory management.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ManagedAtomic"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/ManagedAtomic",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ManagedAtomic"
    }
  ],
  "role" : "symbol",
  "title" : "ManagedAtomic",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/managedatomic"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/ManagedAtomicLazyReference": {
  "abstract" : [
    {
      "text" : "A reference type holding a lazily initializable atomic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "strong reference, with automatic memory management.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ManagedAtomicLazyReference"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/ManagedAtomicLazyReference",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ManagedAtomicLazyReference"
    }
  ],
  "role" : "symbol",
  "title" : "ManagedAtomicLazyReference",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/managedatomiclazyreference"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomic": {
  "abstract" : [
    {
      "text" : "An unsafe reference type holding an atomic value, requiring manual memory",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "management of the underlying storage representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnsafeAtomic"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomic",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnsafeAtomic"
    }
  ],
  "role" : "symbol",
  "title" : "UnsafeAtomic",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomic"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/UnsafeAtomicLazyReference": {
  "abstract" : [
    {
      "text" : "An unsafe reference type holding a lazily initializable atomic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "strong reference, requiring manual memory management of the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "underlying storage representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnsafeAtomicLazyReference"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/UnsafeAtomicLazyReference",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnsafeAtomicLazyReference"
    }
  ],
  "role" : "symbol",
  "title" : "UnsafeAtomicLazyReference",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/unsafeatomiclazyreference"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Atomics/atomicMemoryFence(ordering:)": {
  "abstract" : [
    {
      "text" : "Establishes a memory ordering without associating it with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "particular atomic operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "atomicMemoryFence"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ordering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Atomics20AtomicUpdateOrderingV",
      "text" : "AtomicUpdateOrdering"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Atomics\/atomicMemoryFence(ordering:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "atomicMemoryFence(ordering:)",
  "type" : "topic",
  "url" : "\/documentation\/atomics\/atomicmemoryfence(ordering:)"
}
}
}