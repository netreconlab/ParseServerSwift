{
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is an outbound channel handler that handles automatic streaming compression of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "HTTP requests.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:18NIOHTTPCompression24NIOHTTPRequestCompressorC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NIOHTTPRequestCompressor"
      }
    ],
    "modules" : [
      {
        "name" : "NIOHTTPCompression"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "NIOHTTPRequestCompressor"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "NIOHTTPRequestCompressor"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "NIOHTTPRequestCompressor"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This compressor supports gzip and deflate. It works best if many writes are made between flushes.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Note that this compressor performs the compression on the event loop thread. This means that compressing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "some resources, particularly those that do not benefit from compression or that could have been compressed",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "ahead-of-time instead of dynamically, could be a waste of CPU time and latency for relatively minimal",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "benefit. This channel handler should be present in the pipeline only for dynamically-generated and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "highly-compressible content, which will see the biggest benefits from streaming compression.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/init(encoding:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/flush(context:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerAdded(context:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerRemoved(context:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/write(context:data:promise:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundIn",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundOut"
      ],
      "title" : "Type Aliases"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/ChannelOutboundHandler-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/RemovableChannelHandler-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/niohttpcompression\/niohttprequestcompressor"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelHandler": {
  "abstract" : [
    {
      "text" : "Base protocol for handlers that handle I\/O events or intercept an I\/O operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/ChannelOutboundHandler": {
  "abstract" : [
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " which handles outbound I\/O events or intercept an outbound I\/O operation for a ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/ChannelOutboundHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelOutboundHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelOutboundHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/channeloutboundhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIO/RemovableChannelHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be dynamically removed from a ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " whilst",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "Channel",
      "type" : "codeVoice"
    },
    {
      "text" : " is operating normally.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RemovableChannelHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is required to remove itself from the ",
      "type" : "text"
    },
    {
      "code" : "ChannelPipeline",
      "type" : "codeVoice"
    },
    {
      "text" : " (using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChannelHandlerContext.leavePipeline",
      "type" : "codeVoice"
    },
    {
      "text" : ") as soon as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIO\/RemovableChannelHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RemovableChannelHandler"
    }
  ],
  "role" : "symbol",
  "title" : "RemovableChannelHandler",
  "type" : "topic",
  "url" : "\/documentation\/nio\/removablechannelhandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "NIOHTTPCompression",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is an outbound channel handler that handles automatic streaming compression of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "HTTP requests.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestCompressor"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NIOHTTPRequestCompressor"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPRequestCompressor",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/ChannelOutboundHandler-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/ChannelOutboundHandler-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ChannelOutboundHandler Implementations",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/channeloutboundhandler-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/OutboundIn": {
  "abstract" : [
    {
      "text" : "Class takes ",
      "type" : "text"
    },
    {
      "code" : "HTTPClientRequestPart",
      "type" : "codeVoice"
    },
    {
      "text" : " as the type to send.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OutboundIn"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundIn",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OutboundIn"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPRequestCompressor.OutboundIn",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/outboundin"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/OutboundOut": {
  "abstract" : [
    {
      "text" : "Passes ",
      "type" : "text"
    },
    {
      "code" : "HTTPClientRequestPart",
      "type" : "codeVoice"
    },
    {
      "text" : " to the next stage in the pipeline when sending.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OutboundOut"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundOut",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OutboundOut"
    }
  ],
  "role" : "symbol",
  "title" : "NIOHTTPRequestCompressor.OutboundOut",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/outboundout"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/RemovableChannelHandler-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/RemovableChannelHandler-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RemovableChannelHandler Implementations",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/removablechannelhandler-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/flush(context:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "flush"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/flush(context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "flush(context:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/flush(context:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/handlerAdded(context:)": {
  "abstract" : [
    {
      "text" : "Add handler to the pipeline.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "handlerAdded"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerAdded(context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "handlerAdded(context:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/handleradded(context:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/handlerRemoved(context:)": {
  "abstract" : [
    {
      "text" : "Remove handler from pipeline.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "handlerRemoved"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerRemoved(context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "handlerRemoved(context:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/handlerremoved(context:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/init(encoding:)": {
  "abstract" : [
    {
      "text" : "Initialize a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor",
      "isActive" : true,
      "type" : "reference"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "encoding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18NIOHTTPCompression14NIOCompressionO",
      "text" : "NIOCompression"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18NIOHTTPCompression14NIOCompressionO9AlgorithmV",
      "text" : "Algorithm"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/init(encoding:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(encoding:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/init(encoding:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/write(context:data:promise:)": {
  "abstract" : [
    {
      "text" : "Write to channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "write"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore21ChannelHandlerContextC",
      "text" : "ChannelHandlerContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "data"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore6NIOAnyV",
      "text" : "NIOAny"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "promise"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7NIOCore16EventLoopPromiseV",
      "text" : "EventLoopPromise"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/write(context:data:promise:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "write(context:data:promise:)",
  "type" : "topic",
  "url" : "\/documentation\/niohttpcompression\/niohttprequestcompressor\/write(context:data:promise:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}