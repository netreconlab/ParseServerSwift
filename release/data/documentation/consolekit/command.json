{
  "abstract" : [
    {
      "text" : "A command that can be run through a ",
      "type" : "text"
    },
    {
      "code" : "Console",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/Command"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10ConsoleKit7CommandP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Command"
      }
    ],
    "modules" : [
      {
        "name" : "ConsoleKit"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Command"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "Command"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Command"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/AnyCommand",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10ConsoleKit10AnyCommandP",
              "text" : "AnyCommand"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Both ",
              "type" : "text"
            },
            {
              "code" : "Command",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "CommandGroup",
              "type" : "codeVoice"
            },
            {
              "text" : " conform to ",
              "type" : "text"
            },
            {
              "code" : "AnyCommand",
              "type" : "codeVoice"
            },
            {
              "text" : " which provides the basic requirements",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "all command-like types need. In addition to those types, a ",
              "type" : "text"
            },
            {
              "code" : "Command",
              "type" : "codeVoice"
            },
            {
              "text" : " requires zero or more ",
              "type" : "text"
            },
            {
              "code" : "CommandArgument",
              "type" : "codeVoice"
            },
            {
              "text" : "s.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Below is a sample command that generates ASCII picture of a cow with a message.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct CowsayCommand: Command {",
            "    public struct Signature: CommandSignature {",
            "        @Argument(name: \"message\")",
            "        var message: String",
            "",
            "        @Option(name: \"eyes\", short: \"e\")",
            "        var eyes: String?",
            "",
            "        @Option(name: \"tongue\", short: \"t\")",
            "        var tongue: String?",
            "",
            "        public init() { }",
            "    }",
            "",
            "    var help: String {",
            "        \"Generates ASCII picture of a cow with a message.\"",
            "    }",
            "",
            "    public init() { }",
            "    public func run(using context: CommandContext, signature: Signature) throws {",
            "        let eyes = signature.eyes ?? \"oo\"",
            "        let tongue = signature.tongue ?? \" \"",
            "        let padding = String(repeating: \"-\", count: message.count)",
            "        let text: String = \"\"\"",
            "          \\(padding)",
            "        < \\(message) >",
            "          \\(padding)",
            "                  \\\\   ^__^",
            "                   \\\\  (\\(eyes)\\\\_______",
            "                      (__)\\\\       )\\\\\/\\\\",
            "                        \\(tongue)  ||----w |",
            "                           ||     ||",
            "        \"\"\"",
            "        context.console.print(text)",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Meanwhile you can use the Command in an executable target like:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let console: Console = Terminal()",
            "var input = CommandInput(arguments: CommandLine.arguments)",
            "var context = CommandContext(console: console, input: input)",
            "",
            "try console.run(CoswayCommand(), with: context)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "code" : "Commands",
              "type" : "codeVoice"
            },
            {
              "text" : " to register commands and create a ",
              "type" : "text"
            },
            {
              "code" : "CommandGroup",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "You can also use ",
                  "type" : "text"
                },
                {
                  "code" : "console.run(...)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to run an ",
                  "type" : "text"
                },
                {
                  "code" : "AnyCommand",
                  "type" : "codeVoice"
                },
                {
                  "text" : " manually.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "Here is a simple example of the command in action, assuming it has been registered as ",
              "type" : "text"
            },
            {
              "code" : "\"cowsay\"",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "swift run cowsay Hello",
            "  -----",
            "< Hello >",
            "  -----",
            "          \\   ^__^",
            "           \\  (oo\\_______",
            "              (__)\\       )\\\/\\",
            "                   ||----w |",
            "                   ||     ||"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "And an example with flags:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "swift run cowsay \"I'm a dead cow\" -e xx -t U",
            "  --------------",
            "< I'm a dead cow >",
            "  --------------",
            "          \\   ^__^",
            "           \\  (xx\\_______",
            "              (__)\\       )\\\/\\",
            "                U  ||----w |",
            "                   ||     ||"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/AnyCommand"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/BootCommand",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RoutesCommand",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/ServeCommand"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/Command\/Signature"
      ],
      "title" : "Associated Types"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/Command\/run(using:signature:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/consolekit\/command"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/ConsoleKit": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ConsoleKit",
  "type" : "topic",
  "url" : "\/documentation\/consolekit"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/ConsoleKit/AnyCommand": {
  "abstract" : [
    {
      "text" : "A type-erased ",
      "type" : "text"
    },
    {
      "code" : "Command",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyCommand"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/AnyCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyCommand"
    }
  ],
  "role" : "symbol",
  "title" : "AnyCommand",
  "type" : "topic",
  "url" : "\/documentation\/consolekit\/anycommand"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/ConsoleKit/Command": {
  "abstract" : [
    {
      "text" : "A command that can be run through a ",
      "type" : "text"
    },
    {
      "code" : "Console",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Command"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/Command",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Command"
    }
  ],
  "role" : "symbol",
  "title" : "Command",
  "type" : "topic",
  "url" : "\/documentation\/consolekit\/command"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/ConsoleKit/Command/Signature": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Signature"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ConsoleKit16CommandSignatureP",
      "text" : "CommandSignature"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/Command\/Signature",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Signature",
  "type" : "topic",
  "url" : "\/documentation\/consolekit\/command\/signature"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/ConsoleKit/Command/run(using:signature:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "run"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ConsoleKit14CommandContextV",
      "text" : "CommandContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "signature"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ConsoleKit7CommandP9SignatureQa",
      "text" : "Signature"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/ConsoleKit\/Command\/run(using:signature:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "run(using:signature:)",
  "type" : "topic",
  "url" : "\/documentation\/consolekit\/command\/run(using:signature:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/BootCommand": {
  "abstract" : [
    {
      "text" : "Boots the ",
      "type" : "text"
    },
    {
      "code" : "Application",
      "type" : "codeVoice"
    },
    {
      "text" : " then exits successfully.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BootCommand"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/BootCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BootCommand"
    }
  ],
  "role" : "symbol",
  "title" : "BootCommand",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/bootcommand"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/RoutesCommand": {
  "abstract" : [
    {
      "text" : "Displays all routes registered to the ",
      "type" : "text"
    },
    {
      "code" : "Application",
      "type" : "codeVoice"
    },
    {
      "text" : "’s ",
      "type" : "text"
    },
    {
      "code" : "Router",
      "type" : "codeVoice"
    },
    {
      "text" : " in an ASCII-formatted table.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RoutesCommand"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/RoutesCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RoutesCommand"
    }
  ],
  "role" : "symbol",
  "title" : "RoutesCommand",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/routescommand"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Vapor/ServeCommand": {
  "abstract" : [
    {
      "text" : "Boots the application’s server. Listens for ",
      "type" : "text"
    },
    {
      "code" : "SIGINT",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "SIGTERM",
      "type" : "codeVoice"
    },
    {
      "text" : " for graceful shutdown.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ServeCommand"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Vapor\/ServeCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ServeCommand"
    }
  ],
  "role" : "symbol",
  "title" : "ServeCommand",
  "type" : "topic",
  "url" : "\/documentation\/vapor\/servecommand"
}
}
}